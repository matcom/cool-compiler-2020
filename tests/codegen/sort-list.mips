.data
dispatch_void: .asciiz "Runtime Error: A dispatch (static or dynamic) on void"
case_void: .asciiz "Runtime Error: A case on void"
case_no_match: .asciiz "Runtime Error: Execution of a case statement without a matching branch"
div_zero: .asciiz "Runtime Error: Division by zero"
substr: .asciiz "Runtime Error: Substring out of range"
heap: .asciiz "Runtime Error: Heap overflow"
temp_string: .space 2048
void: .word 0
Object_name: .asciiz "Object"
Object_methods:
.word Object.abort
.word Object.type_name
.word Object.copy
Int_name: .asciiz "Int"
Int_methods:
.word Object.abort
.word Object.type_name
.word Object.copy
String_name: .asciiz "String"
String_methods:
.word Object.abort
.word Object.type_name
.word Object.copy
.word String.length
.word String.concat
.word String.substr
Bool_name: .asciiz "Bool"
Bool_methods:
.word Object.abort
.word Object.type_name
.word Object.copy
IO_name: .asciiz "IO"
IO_methods:
.word Object.abort
.word Object.type_name
.word Object.copy
.word IO.out_string
.word IO.out_int
.word IO.in_string
.word IO.in_int
List_name: .asciiz "List"
List_methods:
.word Object.abort
.word Object.type_name
.word Object.copy
.word IO.out_string
.word IO.out_int
.word IO.in_string
.word IO.in_int
.word List.isNil
.word List.cons
.word List.car
.word List.cdr
.word List.rev
.word List.sort
.word List.insert
.word List.rcons
.word List.print_list
Cons_name: .asciiz "Cons"
Cons_methods:
.word Object.abort
.word Object.type_name
.word Object.copy
.word IO.out_string
.word IO.out_int
.word IO.in_string
.word IO.in_int
.word Cons.isNil
.word List.cons
.word Cons.car
.word Cons.cdr
.word Cons.rev
.word Cons.sort
.word Cons.insert
.word Cons.rcons
.word Cons.print_list
.word Cons.init
Nil_name: .asciiz "Nil"
Nil_methods:
.word Object.abort
.word Object.type_name
.word Object.copy
.word IO.out_string
.word IO.out_int
.word IO.in_string
.word IO.in_int
.word Nil.isNil
.word List.cons
.word List.car
.word List.cdr
.word Nil.rev
.word Nil.sort
.word Nil.insert
.word Nil.rcons
.word Nil.print_list
Main_name: .asciiz "Main"
Main_methods:
.word Object.abort
.word Object.type_name
.word Object.copy
.word IO.out_string
.word IO.out_int
.word IO.in_string
.word IO.in_int
.word Main.iota
.word Main.main
s_0: .asciiz "Abort called from class "
s_1: .asciiz "
"
empty_str: .asciiz ""
s_3: .asciiz "\n"
s_4: .asciiz "How many numbers to sort? "
.text
dispatch_void_error:
la $a0 dispatch_void
li $v0, 4
syscall
li $v0, 10
syscall
case_void_error:
la $a0 case_void
li $v0, 4
syscall
li $v0, 10
syscall
case_no_match_error:
la $a0 case_no_match
li $v0, 4
syscall
li $v0, 10
syscall
div_zero_error:
la $a0 div_zero
li $v0, 4
syscall
li $v0, 10
syscall
substr_error:
la $a0 substr
li $v0, 4
syscall
li $v0, 10
syscall
heap_error:
la $a0 heap
li $v0, 4
syscall
li $v0, 10
syscall
main:
addi $sp, $sp, -8
addi $sp, $sp, -4
sw $ra, 0($sp)
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp heap_error
move $t0, $v0
li $t1, 6
sw $t1, 0($t0)
la $t1, Main_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Main_methods
sw $t1, 12($t0)
sw $t0, 4($sp)
move $t0, $sp
lw $t1, 4($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Main_init
sw $a1, 8($sp)
move $t0, $sp
lw $t1, 4($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Main.main
sw $a1, 8($sp)
move $a1, $zero
lw $ra, 0($sp)
addi $sp, $sp, 12
jr $ra
Object_init:
addi $sp, $sp, 0
addi $sp, $sp, -4
sw $ra, 0($sp)
move $a1, $zero
lw $ra, 0($sp)
addi $sp, $sp, 8
jr $ra
Object.abort:
addi $sp, $sp, -12
addi $sp, $sp, -4
sw $ra, 0($sp)
la $t0, s_0
sw $t0, 4($sp)
lw $a0, 4($sp)
li $v0, 4
syscall
lw $t0, 16($sp)
lw $t1, 4($t0)
sw $t1, 8($sp)
lw $a0, 8($sp)
li $v0, 4
syscall
la $t0, s_1
sw $t0, 12($sp)
lw $a0, 12($sp)
li $v0, 4
syscall
li $v0, 10
syscall
lw $ra, 0($sp)
addi $sp, $sp, 20
jr $ra
Object.type_name:
addi $sp, $sp, -12
addi $sp, $sp, -4
sw $ra, 0($sp)
lw $t0, 16($sp)
lw $t1, 4($t0)
sw $t1, 4($sp)
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp heap_error
move $t0, $v0
li $t1, 1
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 8($sp)
move $t0, $sp
lw $t1, 4($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 12($sp)
lw $a1, 8($sp)
lw $ra, 0($sp)
addi $sp, $sp, 20
jr $ra
Object.copy:
addi $sp, $sp, -4
addi $sp, $sp, -4
sw $ra, 0($sp)
lw $t0, 8($sp)
lw $a0, 8($t0)
mul $a0, $a0, 4
li $v0, 9
syscall
bge $v0, $sp heap_error
move $t1, $v0
li $a0, 0
lw $t3, 8($t0)
copy_object_word:
lw $t2, 0($t0)
sw $t2, 0($t1)
addi $t0, $t0, 4
addi $t1, $t1, 4
addi $a0, $a0, 1
blt $a0, $t3, copy_object_word
sw $v0, 4($sp)
lw $a1, 4($sp)
lw $ra, 0($sp)
addi $sp, $sp, 12
jr $ra
IO_init:
addi $sp, $sp, 0
addi $sp, $sp, -4
sw $ra, 0($sp)
move $a1, $zero
lw $ra, 0($sp)
addi $sp, $sp, 8
jr $ra
IO.out_string:
addi $sp, $sp, -4
addi $sp, $sp, -4
sw $ra, 0($sp)
lw $t0, 12($sp)
lw $t1, 16($t0)
sw $t1, 4($sp)
lw $a0, 4($sp)
li $v0, 4
syscall
lw $a1, 8($sp)
lw $ra, 0($sp)
addi $sp, $sp, 16
jr $ra
IO.out_int:
addi $sp, $sp, -4
addi $sp, $sp, -4
sw $ra, 0($sp)
lw $t0, 12($sp)
lw $t1, 16($t0)
sw $t1, 4($sp)
li $v0 , 1
lw $a0 , 4($sp)
syscall
lw $a1, 8($sp)
lw $ra, 0($sp)
addi $sp, $sp, 16
jr $ra
IO.in_string:
addi $sp, $sp, -12
addi $sp, $sp, -4
sw $ra, 0($sp)
la $a0, temp_string
li $a1, 2048
li $v0, 8
syscall
move $t0, $a0
jump_read_str_char:
li $t1, 0
lb $t1, 0($t0)
beqz $t1, analize_str_end
addi $t0, $t0, 1
j jump_read_str_char
analize_str_end:
addi $t0, $t0, -1
li $t1, 0
lb $t1, 0($t0)
bne $t1, 10, finish_jump_read_str_char
sb $0, 0($t0)
addi $t0, $t0, -1
lb $t1, 0($t0)
bne $t1, 13, finish_jump_read_str_char
sb $0, 0($t0)
j analize_str_end
finish_jump_read_str_char:
sw $a0, 4($sp)
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp heap_error
move $t0, $v0
li $t1, 1
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 8($sp)
move $t0, $sp
lw $t1, 4($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 12($sp)
lw $a1, 8($sp)
lw $ra, 0($sp)
addi $sp, $sp, 20
jr $ra
IO.in_int:
addi $sp, $sp, -12
addi $sp, $sp, -4
sw $ra, 0($sp)
li $v0, 5
syscall
sw $v0, 4($sp)
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 8($sp)
move $t0, $sp
lw $t1, 4($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 12($sp)
lw $a1, 8($sp)
lw $ra, 0($sp)
addi $sp, $sp, 20
jr $ra
String_init:
addi $sp, $sp, 0
addi $sp, $sp, -4
sw $ra, 0($sp)
lw $t0, 4($sp)
lw $t1, 8($sp)
sw $t1, 16($t0)
move $a1, $zero
lw $ra, 0($sp)
addi $sp, $sp, 12
jr $ra
String.length:
addi $sp, $sp, -12
addi $sp, $sp, -4
sw $ra, 0($sp)
lw $t0, 16($sp)
lw $t0, 16($t0)
li $a0, 0
count_char:
lb $t1, 0($t0)
beqz $t1, finish_chars_count
addi $t0, $t0, 1
addi $a0, $a0, 1
j count_char
finish_chars_count:
sw $a0, 4($sp)
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 8($sp)
move $t0, $sp
lw $t1, 4($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 12($sp)
lw $a1, 8($sp)
lw $ra, 0($sp)
addi $sp, $sp, 20
jr $ra
String.concat:
addi $sp, $sp, -36
addi $sp, $sp, -4
sw $ra, 0($sp)
lw $t0, 40($sp)
lw $t1, 16($t0)
sw $t1, 4($sp)
move $t0, $sp
lw $t1, 40($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String.length
sw $a1, 8($sp)
lw $t0, 44($sp)
lw $t1, 16($t0)
sw $t1, 12($sp)
move $t0, $sp
lw $t1, 44($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String.length
sw $a1, 16($sp)
lw $t0, 8($sp)
lw $t1, 16($t0)
sw $t1, 20($sp)
lw $t0, 16($sp)
lw $t1, 16($t0)
sw $t1, 24($sp)
lw $a0, 20($sp)
lw $t0, 24($sp)
add $a0, $a0, $t0
addi $a0, $a0, 1
li $v0, 9
syscall
bge $v0, $sp heap_error
move $t3, $v0
lw $t0, 4($sp)
lw $t1, 12($sp)
copy_arg1_char:
lb $t2, 0($t0)
sb $t2, 0($v0)
beqz $t2, concat_arg2_char
addi $t0, $t0, 1
addi $v0, $v0, 1
j copy_arg1_char
concat_arg2_char:
lb $t2, 0($t1)
sb $t2, 0($v0)
beqz $t2, finish_arg2_concat
addi $t1, $t1, 1
addi $v0, $v0, 1
j concat_arg2_char
finish_arg2_concat:
sb $0, ($v0)
sw $t3, 28($sp)
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp heap_error
move $t0, $v0
li $t1, 1
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 32($sp)
move $t0, $sp
lw $t1, 28($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 32($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 36($sp)
lw $a1, 32($sp)
lw $ra, 0($sp)
addi $sp, $sp, 48
jr $ra
String.substr:
addi $sp, $sp, -20
addi $sp, $sp, -4
sw $ra, 0($sp)
lw $t0, 28($sp)
lw $t1, 16($t0)
sw $t1, 4($sp)
lw $t0, 32($sp)
lw $t1, 16($t0)
sw $t1, 8($sp)
lw $a0, 8($sp)
addi $a0, $a0, 1
li $v0, 9
syscall
bge $v0, $sp heap_error
lw $t0, 4($sp)
lw $t1, 8($sp)
lw $t4, 24($sp)
lw $t2, 16($t4)
bltz $t0, substr_error
li $a0, 0
jump_str_char:
beq $a0, $t0, finish_index_jump
addi $a0, $a0, 1
addi $t2, $t2, 1
beq $t2, $zero, substr_error
j jump_str_char
finish_index_jump:
li $a0, 0
move $t3, $v0
copy_substr_char:
beq $a0, $t1 finish_substr_copy
li $t0, 0
lb $t0, 0($t2)
sb $t0, 0($v0)
addi $t2, $t2, 1
beq $t2, $zero, substr_error
addi $v0, $v0, 1
addi $a0, $a0, 1
j copy_substr_char
finish_substr_copy:
sb $0, ($v0)
sw $t3, 12($sp)
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp heap_error
move $t0, $v0
li $t1, 1
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 16($sp)
move $t0, $sp
lw $t1, 12($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 16($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 20($sp)
lw $a1, 16($sp)
lw $ra, 0($sp)
addi $sp, $sp, 36
jr $ra
Bool_init:
addi $sp, $sp, 0
addi $sp, $sp, -4
sw $ra, 0($sp)
lw $t0, 4($sp)
lw $t1, 8($sp)
sw $t1, 16($t0)
move $a1, $zero
lw $ra, 0($sp)
addi $sp, $sp, 12
jr $ra
Int_init:
addi $sp, $sp, 0
addi $sp, $sp, -4
sw $ra, 0($sp)
lw $t0, 4($sp)
lw $t1, 8($sp)
sw $t1, 16($t0)
move $a1, $zero
lw $ra, 0($sp)
addi $sp, $sp, 12
jr $ra
String_equals:
addi $sp, $sp, -12
addi $sp, $sp, -4
sw $ra, 0($sp)
lw $t0, 16($sp)
lw $t1, 16($t0)
sw $t1, 4($sp)
lw $t0, 20($sp)
lw $t1, 16($t0)
sw $t1, 8($sp)
lw $t1, 4($sp)
lw $t2, 8($sp)
compare_str_char:
li $t3, 0
lb $t3, 0($t1)
li $t4, 0
lb $t4, 0($t2)
seq $a0, $t3, $t4
beqz $a0, finish_compare_str
beqz $t3, finish_compare_str
beqz $t4, finish_compare_str
addi $t1, $t1, 1
addi $t2, $t2, 1
j compare_str_char
finish_compare_str:
sw $a0, 12($sp)
lw $a1, 12($sp)
lw $ra, 0($sp)
addi $sp, $sp, 24
jr $ra
List_init:
addi $sp, $sp, -4
addi $sp, $sp, -4
sw $ra, 0($sp)
move $t0, $sp
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal IO_init
sw $a1, 4($sp)
move $a1, $zero
lw $ra, 0($sp)
addi $sp, $sp, 12
jr $ra
List.isNil:
addi $sp, $sp, -16
addi $sp, $sp, -4
sw $ra, 0($sp)
move $t0, $sp
lw $t1, 20($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 20($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 0($t2)
jal $t3
sw $a1, 4($sp)
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 8($sp)
li $t0, 1
sw $t0, 12($sp)
move $t0, $sp
lw $t1, 12($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 16($sp)
lw $a1, 8($sp)
lw $ra, 0($sp)
addi $sp, $sp, 24
jr $ra
List.cons:
addi $sp, $sp, -20
addi $sp, $sp, -4
sw $ra, 0($sp)
li $a0, 24
li $v0, 9
syscall
bge $v0, $sp heap_error
move $t0, $v0
li $t1, 6
sw $t1, 0($t0)
la $t1, Cons_name
sw $t1, 4($t0)
li $t1, 6
sw $t1, 8($t0)
la $t1, Cons_methods
sw $t1, 12($t0)
sw $t0, 4($sp)
move $t0, $sp
lw $t1, 4($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Cons_init
sw $a1, 8($sp)
lw $t1, 4($sp)
sw $t1, 12($sp)
move $t0, $sp
lw $t1, 24($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 28($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 12($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 12($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 64($t2)
jal $t3
sw $a1, 16($sp)
lw $t1, 16($sp)
sw $t1, 20($sp)
lw $a1, 20($sp)
lw $ra, 0($sp)
addi $sp, $sp, 32
jr $ra
List.car:
addi $sp, $sp, -12
addi $sp, $sp, -4
sw $ra, 0($sp)
move $t0, $sp
lw $t1, 16($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 16($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 0($t2)
jal $t3
sw $a1, 4($sp)
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 8($sp)
move $t0, $sp
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 12($sp)
lw $a1, 8($sp)
lw $ra, 0($sp)
addi $sp, $sp, 20
jr $ra
List.cdr:
addi $sp, $sp, -12
addi $sp, $sp, -4
sw $ra, 0($sp)
move $t0, $sp
lw $t1, 16($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 16($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 0($t2)
jal $t3
sw $a1, 4($sp)
li $a0, 16
li $v0, 9
syscall
bge $v0, $sp heap_error
move $t0, $v0
li $t1, 5
sw $t1, 0($t0)
la $t1, List_name
sw $t1, 4($t0)
li $t1, 4
sw $t1, 8($t0)
la $t1, List_methods
sw $t1, 12($t0)
sw $t0, 8($sp)
move $t0, $sp
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal List_init
sw $a1, 12($sp)
lw $a1, 8($sp)
lw $ra, 0($sp)
addi $sp, $sp, 20
jr $ra
List.rev:
addi $sp, $sp, -4
addi $sp, $sp, -4
sw $ra, 0($sp)
move $t0, $sp
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 8($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 40($t2)
jal $t3
sw $a1, 4($sp)
lw $a1, 4($sp)
lw $ra, 0($sp)
addi $sp, $sp, 12
jr $ra
List.sort:
addi $sp, $sp, -4
addi $sp, $sp, -4
sw $ra, 0($sp)
move $t0, $sp
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 8($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 40($t2)
jal $t3
sw $a1, 4($sp)
lw $a1, 4($sp)
lw $ra, 0($sp)
addi $sp, $sp, 12
jr $ra
List.insert:
addi $sp, $sp, -4
addi $sp, $sp, -4
sw $ra, 0($sp)
move $t0, $sp
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 8($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 40($t2)
jal $t3
sw $a1, 4($sp)
lw $a1, 4($sp)
lw $ra, 0($sp)
addi $sp, $sp, 16
jr $ra
List.rcons:
addi $sp, $sp, -4
addi $sp, $sp, -4
sw $ra, 0($sp)
move $t0, $sp
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 8($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 40($t2)
jal $t3
sw $a1, 4($sp)
lw $a1, 4($sp)
lw $ra, 0($sp)
addi $sp, $sp, 16
jr $ra
List.print_list:
addi $sp, $sp, -4
addi $sp, $sp, -4
sw $ra, 0($sp)
move $t0, $sp
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 8($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 0($t2)
jal $t3
sw $a1, 4($sp)
lw $a1, 4($sp)
lw $ra, 0($sp)
addi $sp, $sp, 12
jr $ra
Cons_init:
addi $sp, $sp, -16
addi $sp, $sp, -4
sw $ra, 0($sp)
move $t0, $sp
lw $t1, 20($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal List_init
sw $a1, 4($sp)
move $a1, $zero
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 8($sp)
li $t0, 0
sw $t0, 12($sp)
move $t0, $sp
lw $t1, 12($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 16($sp)
lw $t0, 20($sp)
lw $t1, 8($sp)
sw $t1, 16($t0)
lw $t0, 20($sp)
la $t1, void
sw $t1, 20($t0)
lw $ra, 0($sp)
addi $sp, $sp, 24
jr $ra
Cons.isNil:
addi $sp, $sp, -12
addi $sp, $sp, -4
sw $ra, 0($sp)
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 4($sp)
li $t0, 0
sw $t0, 8($sp)
move $t0, $sp
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 4($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 12($sp)
lw $a1, 4($sp)
lw $ra, 0($sp)
addi $sp, $sp, 20
jr $ra
Cons.init:
addi $sp, $sp, -8
addi $sp, $sp, -4
sw $ra, 0($sp)
lw $t0, 12($sp)
lw $t1, 16($sp)
sw $t1, 16($t0)
lw $t0, 12($sp)
lw $t1, 20($sp)
sw $t1, 20($t0)
lw $a1, 12($sp)
lw $ra, 0($sp)
addi $sp, $sp, 24
jr $ra
Cons.car:
addi $sp, $sp, -4
addi $sp, $sp, -4
sw $ra, 0($sp)
lw $t0, 8($sp)
lw $t1, 16($t0)
sw $t1, 4($sp)
lw $a1, 4($sp)
lw $ra, 0($sp)
addi $sp, $sp, 12
jr $ra
Cons.cdr:
addi $sp, $sp, -4
addi $sp, $sp, -4
sw $ra, 0($sp)
lw $t0, 8($sp)
lw $t1, 20($t0)
sw $t1, 4($sp)
lw $a1, 4($sp)
lw $ra, 0($sp)
addi $sp, $sp, 12
jr $ra
Cons.rev:
addi $sp, $sp, -16
addi $sp, $sp, -4
sw $ra, 0($sp)
lw $t0, 20($sp)
lw $t1, 20($t0)
sw $t1, 12($sp)
move $t0, $sp
lw $t1, 12($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 12($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 44($t2)
jal $t3
sw $a1, 8($sp)
lw $t0, 20($sp)
lw $t1, 16($t0)
sw $t1, 16($sp)
move $t0, $sp
lw $t1, 16($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 8($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 56($t2)
jal $t3
sw $a1, 4($sp)
lw $a1, 4($sp)
lw $ra, 0($sp)
addi $sp, $sp, 24
jr $ra
Cons.sort:
addi $sp, $sp, -16
addi $sp, $sp, -4
sw $ra, 0($sp)
lw $t0, 20($sp)
lw $t1, 20($t0)
sw $t1, 12($sp)
move $t0, $sp
lw $t1, 12($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 12($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 48($t2)
jal $t3
sw $a1, 8($sp)
lw $t0, 20($sp)
lw $t1, 16($t0)
sw $t1, 16($sp)
move $t0, $sp
lw $t1, 16($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 8($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 52($t2)
jal $t3
sw $a1, 4($sp)
lw $a1, 4($sp)
lw $ra, 0($sp)
addi $sp, $sp, 24
jr $ra
Cons.insert:
addi $sp, $sp, -64
addi $sp, $sp, -4
sw $ra, 0($sp)
lw $t0, 68($sp)
lw $t1, 16($t0)
sw $t1, 52($sp)
lw $t0, 72($sp)
lw $t1, 16($t0)
sw $t1, 16($sp)
lw $t0, 52($sp)
lw $t1, 16($t0)
sw $t1, 20($sp)
lw $a0, 16($sp)
lw $t1, 20($sp)
slt $a0, $a0, $t1
sw $a0, 12($sp)
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 8($sp)
move $t0, $sp
lw $t1, 12($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 28($sp)
lw $t0, 8($sp)
lw $a0, 16($t0)
bnez $a0, label_1
li $a0, 24
li $v0, 9
syscall
bge $v0, $sp heap_error
move $t0, $v0
li $t1, 6
sw $t1, 0($t0)
la $t1, Cons_name
sw $t1, 4($t0)
li $t1, 6
sw $t1, 8($t0)
la $t1, Cons_methods
sw $t1, 12($t0)
sw $t0, 36($sp)
move $t0, $sp
lw $t1, 36($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Cons_init
sw $a1, 40($sp)
lw $t0, 68($sp)
lw $t1, 20($t0)
sw $t1, 48($sp)
move $t0, $sp
lw $t1, 72($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 48($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 48($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 52($t2)
jal $t3
sw $a1, 44($sp)
lw $t0, 68($sp)
lw $t1, 16($t0)
sw $t1, 52($sp)
move $t0, $sp
lw $t1, 44($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 52($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 36($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 36($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 64($t2)
jal $t3
sw $a1, 32($sp)
lw $t1, 32($sp)
sw $t1, 4($sp)
b label_2
label_1:
li $a0, 24
li $v0, 9
syscall
bge $v0, $sp heap_error
move $t0, $v0
li $t1, 6
sw $t1, 0($t0)
la $t1, Cons_name
sw $t1, 4($t0)
li $t1, 6
sw $t1, 8($t0)
la $t1, Cons_methods
sw $t1, 12($t0)
sw $t0, 60($sp)
move $t0, $sp
lw $t1, 60($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Cons_init
sw $a1, 64($sp)
move $t0, $sp
lw $t1, 68($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 72($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 60($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 60($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 64($t2)
jal $t3
sw $a1, 56($sp)
lw $t1, 56($sp)
sw $t1, 4($sp)
label_2:
lw $a1, 4($sp)
lw $ra, 0($sp)
addi $sp, $sp, 76
jr $ra
Cons.rcons:
addi $sp, $sp, -24
addi $sp, $sp, -4
sw $ra, 0($sp)
li $a0, 24
li $v0, 9
syscall
bge $v0, $sp heap_error
move $t0, $v0
li $t1, 6
sw $t1, 0($t0)
la $t1, Cons_name
sw $t1, 4($t0)
li $t1, 6
sw $t1, 8($t0)
la $t1, Cons_methods
sw $t1, 12($t0)
sw $t0, 8($sp)
move $t0, $sp
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Cons_init
sw $a1, 12($sp)
lw $t0, 28($sp)
lw $t1, 20($t0)
sw $t1, 20($sp)
move $t0, $sp
lw $t1, 32($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 20($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 20($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 56($t2)
jal $t3
sw $a1, 16($sp)
lw $t0, 28($sp)
lw $t1, 16($t0)
sw $t1, 24($sp)
move $t0, $sp
lw $t1, 16($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 24($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 8($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 64($t2)
jal $t3
sw $a1, 4($sp)
lw $a1, 4($sp)
lw $ra, 0($sp)
addi $sp, $sp, 36
jr $ra
Cons.print_list:
addi $sp, $sp, -32
addi $sp, $sp, -4
sw $ra, 0($sp)
lw $t0, 36($sp)
lw $t1, 16($t0)
sw $t1, 8($sp)
move $t0, $sp
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 36($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 36($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 16($t2)
jal $t3
sw $a1, 4($sp)
la $t0, s_3
sw $t0, 16($sp)
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp heap_error
move $t0, $v0
li $t1, 1
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 20($sp)
move $t0, $sp
lw $t1, 16($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 20($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 24($sp)
move $t0, $sp
lw $t1, 20($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 36($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 36($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 12($sp)
lw $t0, 36($sp)
lw $t1, 20($t0)
sw $t1, 32($sp)
move $t0, $sp
lw $t1, 32($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 32($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 60($t2)
jal $t3
sw $a1, 28($sp)
lw $a1, 28($sp)
lw $ra, 0($sp)
addi $sp, $sp, 40
jr $ra
Nil_init:
addi $sp, $sp, -4
addi $sp, $sp, -4
sw $ra, 0($sp)
move $t0, $sp
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal List_init
sw $a1, 4($sp)
move $a1, $zero
lw $ra, 0($sp)
addi $sp, $sp, 12
jr $ra
Nil.isNil:
addi $sp, $sp, -12
addi $sp, $sp, -4
sw $ra, 0($sp)
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 4($sp)
li $t0, 1
sw $t0, 8($sp)
move $t0, $sp
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 4($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 12($sp)
lw $a1, 4($sp)
lw $ra, 0($sp)
addi $sp, $sp, 20
jr $ra
Nil.rev:
addi $sp, $sp, 0
addi $sp, $sp, -4
sw $ra, 0($sp)
lw $a1, 4($sp)
lw $ra, 0($sp)
addi $sp, $sp, 8
jr $ra
Nil.sort:
addi $sp, $sp, 0
addi $sp, $sp, -4
sw $ra, 0($sp)
lw $a1, 4($sp)
lw $ra, 0($sp)
addi $sp, $sp, 8
jr $ra
Nil.insert:
addi $sp, $sp, -4
addi $sp, $sp, -4
sw $ra, 0($sp)
move $t0, $sp
lw $t1, 12($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 8($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 56($t2)
jal $t3
sw $a1, 4($sp)
lw $a1, 4($sp)
lw $ra, 0($sp)
addi $sp, $sp, 16
jr $ra
Nil.rcons:
addi $sp, $sp, -12
addi $sp, $sp, -4
sw $ra, 0($sp)
li $a0, 24
li $v0, 9
syscall
bge $v0, $sp heap_error
move $t0, $v0
li $t1, 6
sw $t1, 0($t0)
la $t1, Cons_name
sw $t1, 4($t0)
li $t1, 6
sw $t1, 8($t0)
la $t1, Cons_methods
sw $t1, 12($t0)
sw $t0, 8($sp)
move $t0, $sp
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Cons_init
sw $a1, 12($sp)
move $t0, $sp
lw $t1, 16($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 20($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 8($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 64($t2)
jal $t3
sw $a1, 4($sp)
lw $a1, 4($sp)
lw $ra, 0($sp)
addi $sp, $sp, 24
jr $ra
Nil.print_list:
addi $sp, $sp, -12
addi $sp, $sp, -4
sw $ra, 0($sp)
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 4($sp)
li $t0, 1
sw $t0, 8($sp)
move $t0, $sp
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 4($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 12($sp)
lw $a1, 4($sp)
lw $ra, 0($sp)
addi $sp, $sp, 20
jr $ra
Main_init:
addi $sp, $sp, -4
addi $sp, $sp, -4
sw $ra, 0($sp)
move $t0, $sp
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal IO_init
sw $a1, 4($sp)
move $a1, $zero
lw $t0, 8($sp)
la $t1, void
sw $t1, 16($t0)
lw $ra, 0($sp)
addi $sp, $sp, 12
jr $ra
Main.iota:
addi $sp, $sp, -116
addi $sp, $sp, -4
sw $ra, 0($sp)
li $a0, 16
li $v0, 9
syscall
bge $v0, $sp heap_error
move $t0, $v0
li $t1, 7
sw $t1, 0($t0)
la $t1, Nil_name
sw $t1, 4($t0)
li $t1, 4
sw $t1, 8($t0)
la $t1, Nil_methods
sw $t1, 12($t0)
sw $t0, 4($sp)
move $t0, $sp
lw $t1, 4($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Nil_init
sw $a1, 8($sp)
lw $t0, 120($sp)
lw $t1, 4($sp)
sw $t1, 16($t0)
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 16($sp)
li $t0, 0
sw $t0, 20($sp)
move $t0, $sp
lw $t1, 20($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 16($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 24($sp)
lw $t1, 16($sp)
sw $t1, 28($sp)
label_3:
lw $t0, 28($sp)
lw $t1, 16($t0)
sw $t1, 44($sp)
lw $t0, 124($sp)
lw $t1, 16($t0)
sw $t1, 48($sp)
lw $a0, 44($sp)
lw $t1, 48($sp)
slt $a0, $a0, $t1
sw $a0, 40($sp)
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 36($sp)
move $t0, $sp
lw $t1, 40($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 36($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 52($sp)
lw $t0, 36($sp)
lw $a0, 16($t0)
bnez $a0, label_4
b label_5
label_4:
li $a0, 24
li $v0, 9
syscall
bge $v0, $sp heap_error
move $t0, $v0
li $t1, 6
sw $t1, 0($t0)
la $t1, Cons_name
sw $t1, 4($t0)
li $t1, 6
sw $t1, 8($t0)
la $t1, Cons_methods
sw $t1, 12($t0)
sw $t0, 60($sp)
move $t0, $sp
lw $t1, 60($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Cons_init
sw $a1, 64($sp)
lw $t0, 120($sp)
lw $t1, 16($t0)
sw $t1, 116($sp)
move $t0, $sp
lw $t1, 116($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 28($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 60($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 60($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 64($t2)
jal $t3
sw $a1, 56($sp)
lw $t0, 120($sp)
lw $t1, 56($sp)
sw $t1, 16($t0)
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 92($sp)
li $t0, 1
sw $t0, 96($sp)
move $t0, $sp
lw $t1, 96($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 92($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 100($sp)
lw $t0, 28($sp)
lw $t1, 16($t0)
sw $t1, 84($sp)
lw $t0, 92($sp)
lw $t1, 16($t0)
sw $t1, 88($sp)
lw $a0, 84($sp)
lw $t1, 88($sp)
add $a0, $a0, $t1
sw $a0, 80($sp)
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 76($sp)
move $t0, $sp
lw $t1, 80($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 76($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 104($sp)
lw $t1, 76($sp)
sw $t1, 28($sp)
b label_3
label_5:
lw $t1, 32($sp)
sw $t1, 112($sp)
lw $t0, 120($sp)
lw $t1, 16($t0)
sw $t1, 116($sp)
lw $a1, 116($sp)
lw $ra, 0($sp)
addi $sp, $sp, 128
jr $ra
Main.main:
addi $sp, $sp, -36
addi $sp, $sp, -4
sw $ra, 0($sp)
la $t0, s_4
sw $t0, 8($sp)
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp heap_error
move $t0, $v0
li $t1, 1
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 12($sp)
move $t0, $sp
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 12($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 16($sp)
move $t0, $sp
lw $t1, 12($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 40($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 40($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 4($sp)
move $t0, $sp
lw $t1, 40($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 40($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 24($t2)
jal $t3
sw $a1, 36($sp)
move $t0, $sp
lw $t1, 36($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 40($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 40($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 28($t2)
jal $t3
sw $a1, 32($sp)
move $t0, $sp
lw $t1, 32($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 32($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 44($t2)
jal $t3
sw $a1, 28($sp)
move $t0, $sp
lw $t1, 28($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 28($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 48($t2)
jal $t3
sw $a1, 24($sp)
move $t0, $sp
lw $t1, 24($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 24($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 60($t2)
jal $t3
sw $a1, 20($sp)
lw $a1, 20($sp)
lw $ra, 0($sp)
addi $sp, $sp, 44
jr $ra