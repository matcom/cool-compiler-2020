
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '48F1963BAC8E26D4136BDB65D37A6EF9'
    
_lr_action_items = {'CLASS':([0,5,],[4,4,]),'$end':([1,2,5,7,],[0,-1,-4,-3,]),'SEMICOLON':([3,11,12,16,24,36,37,38,47,48,50,51,52,75,76,77,78,80,82,89,90,91,92,93,94,95,101,102,105,109,112,121,125,126,128,134,135,136,],[5,17,18,-5,-11,-6,-48,-10,-37,-47,-50,-51,-52,-33,-34,-35,-49,103,-22,-26,-27,-28,-29,-30,-31,-32,-36,-53,-25,-18,122,-19,-21,-12,-24,-20,-23,-42,]),'TYPE':([4,9,19,32,49,55,59,123,],[6,15,24,54,78,81,87,130,]),'OBRACKET':([6,15,31,40,41,42,43,44,45,46,53,57,58,61,62,63,64,65,66,67,81,96,99,100,103,104,106,108,124,127,133,],[8,21,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,104,53,53,53,53,53,53,53,53,53,53,]),'INHERITS':([6,],[9,]),'ID':([8,17,18,20,21,31,34,39,40,41,42,43,44,45,46,53,57,58,60,61,62,63,64,65,66,67,96,97,98,99,100,103,104,106,107,108,122,124,127,133,],[14,14,14,25,14,37,25,70,37,37,37,37,37,37,37,37,37,37,88,37,37,37,37,37,37,37,37,70,113,37,37,37,37,37,119,37,113,37,37,37,]),'CBRACKET':([8,10,13,17,18,21,22,23,30,37,47,48,50,51,52,75,76,77,78,79,82,89,90,91,92,93,94,95,101,102,103,105,109,116,117,121,125,128,134,135,],[-2,16,-9,-2,-2,-2,-7,-8,36,-48,-37,-47,-50,-51,-52,-33,-34,-35,-49,102,-22,-26,-27,-28,-29,-30,-31,-32,-36,-53,-55,-25,-18,-54,126,-19,-21,-24,-20,-23,]),'COLON':([14,25,33,70,113,],[19,32,55,19,123,]),'OPAREN':([14,31,37,40,41,42,43,44,45,46,53,57,58,61,62,63,64,65,66,67,88,96,99,100,103,104,106,108,119,124,127,133,],[20,43,58,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,108,43,43,43,43,43,43,43,127,43,43,43,]),'CPAREN':([20,26,27,28,29,35,37,47,48,50,51,52,54,56,58,74,75,76,77,78,82,83,84,85,86,89,90,91,92,93,94,95,101,102,105,108,109,118,120,121,125,127,128,132,134,135,],[-2,33,-13,-14,-2,-16,-48,-37,-47,-50,-51,-52,-17,-15,-2,101,-33,-34,-35,-49,-22,105,-43,-44,-46,-26,-27,-28,-29,-30,-31,-32,-36,-53,-25,-2,-18,-45,128,-19,-21,-2,-24,135,-20,-23,]),'ASSIGN':([24,37,],[31,57,]),'COMMA':([24,29,37,38,47,48,50,51,52,54,69,75,76,77,78,82,86,89,90,91,92,93,94,95,101,102,105,109,121,125,128,134,135,],[-11,34,-48,-10,-37,-47,-50,-51,-52,-17,97,-33,-34,-35,-49,-22,106,-26,-27,-28,-29,-30,-31,-32,-36,-53,-25,-18,-19,-21,-24,-20,-23,]),'IN':([24,37,38,47,48,50,51,52,68,69,75,76,77,78,82,89,90,91,92,93,94,95,101,102,105,109,110,121,125,128,134,135,],[-11,-48,-10,-37,-47,-50,-51,-52,96,-39,-33,-34,-35,-49,-22,-26,-27,-28,-29,-30,-31,-32,-36,-53,-25,-18,-38,-19,-21,-24,-20,-23,]),'LET':([31,40,41,42,43,44,45,46,53,57,58,61,62,63,64,65,66,67,96,99,100,103,104,106,108,124,127,133,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'CASE':([31,40,41,42,43,44,45,46,53,57,58,61,62,63,64,65,66,67,96,99,100,103,104,106,108,124,127,133,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'IF':([31,40,41,42,43,44,45,46,53,57,58,61,62,63,64,65,66,67,96,99,100,103,104,106,108,124,127,133,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'WHILE':([31,40,41,42,43,44,45,46,53,57,58,61,62,63,64,65,66,67,96,99,100,103,104,106,108,124,127,133,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'NOT':([31,40,41,42,43,44,45,46,53,57,58,61,62,63,64,65,66,67,96,99,100,103,104,106,108,124,127,133,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'ISVOID':([31,40,41,42,43,44,45,46,53,57,58,61,62,63,64,65,66,67,96,99,100,103,104,106,108,124,127,133,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'LNOT':([31,40,41,42,43,44,45,46,53,57,58,61,62,63,64,65,66,67,96,99,100,103,104,106,108,124,127,133,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'INT':([31,40,41,42,43,44,45,46,53,57,58,61,62,63,64,65,66,67,96,99,100,103,104,106,108,124,127,133,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'NEW':([31,40,41,42,43,44,45,46,53,57,58,61,62,63,64,65,66,67,96,99,100,103,104,106,108,124,127,133,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'BOOL':([31,40,41,42,43,44,45,46,53,57,58,61,62,63,64,65,66,67,96,99,100,103,104,106,108,124,127,133,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'STRING':([31,40,41,42,43,44,45,46,53,57,58,61,62,63,64,65,66,67,96,99,100,103,104,106,108,124,127,133,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'AT':([37,38,47,48,50,51,52,71,72,73,74,75,76,77,78,80,82,86,89,90,91,92,93,94,95,101,102,105,109,114,115,117,121,125,128,131,134,135,136,],[-48,59,-37,-47,-50,-51,-52,59,59,59,59,-33,-34,-35,-49,59,59,59,-26,-27,-28,-29,-30,-31,-32,-36,-53,-25,59,59,59,59,-19,-21,-24,59,-20,-23,59,]),'DOT':([37,38,47,48,50,51,52,71,72,73,74,75,76,77,78,80,82,86,87,89,90,91,92,93,94,95,101,102,105,109,114,115,117,121,125,128,131,134,135,136,],[-48,60,-37,-47,-50,-51,-52,60,60,60,60,60,60,60,-49,60,60,60,107,60,60,60,60,60,60,60,-36,-53,-25,60,60,60,60,-19,-21,-24,60,-20,-23,60,]),'PLUS':([37,38,47,48,50,51,52,71,72,73,74,75,76,77,78,80,82,86,89,90,91,92,93,94,95,101,102,105,109,114,115,117,121,125,128,131,134,135,136,],[-48,61,-37,-47,-50,-51,-52,61,61,61,61,61,61,61,-49,61,61,61,-26,-27,-28,-29,61,61,61,-36,-53,-25,61,61,61,61,-19,-21,-24,61,-20,-23,61,]),'MINUS':([37,38,47,48,50,51,52,71,72,73,74,75,76,77,78,80,82,86,89,90,91,92,93,94,95,101,102,105,109,114,115,117,121,125,128,131,134,135,136,],[-48,62,-37,-47,-50,-51,-52,62,62,62,62,62,62,62,-49,62,62,62,-26,-27,-28,-29,62,62,62,-36,-53,-25,62,62,62,62,-19,-21,-24,62,-20,-23,62,]),'STAR':([37,38,47,48,50,51,52,71,72,73,74,75,76,77,78,80,82,86,89,90,91,92,93,94,95,101,102,105,109,114,115,117,121,125,128,131,134,135,136,],[-48,63,-37,-47,-50,-51,-52,63,63,63,63,63,63,63,-49,63,63,63,63,63,-28,-29,63,63,63,-36,-53,-25,63,63,63,63,-19,-21,-24,63,-20,-23,63,]),'DIV':([37,38,47,48,50,51,52,71,72,73,74,75,76,77,78,80,82,86,89,90,91,92,93,94,95,101,102,105,109,114,115,117,121,125,128,131,134,135,136,],[-48,64,-37,-47,-50,-51,-52,64,64,64,64,64,64,64,-49,64,64,64,64,64,-28,-29,64,64,64,-36,-53,-25,64,64,64,64,-19,-21,-24,64,-20,-23,64,]),'LOWER':([37,38,47,48,50,51,52,71,72,73,74,75,76,77,78,80,82,86,89,90,91,92,93,94,95,101,102,105,109,114,115,117,121,125,128,131,134,135,136,],[-48,65,-37,-47,-50,-51,-52,65,65,65,65,65,65,65,-49,65,65,65,-26,-27,-28,-29,-30,-31,-32,-36,-53,-25,65,65,65,65,-19,-21,-24,65,-20,-23,65,]),'LOWEREQ':([37,38,47,48,50,51,52,71,72,73,74,75,76,77,78,80,82,86,89,90,91,92,93,94,95,101,102,105,109,114,115,117,121,125,128,131,134,135,136,],[-48,66,-37,-47,-50,-51,-52,66,66,66,66,66,66,66,-49,66,66,66,-26,-27,-28,-29,-30,-31,-32,-36,-53,-25,66,66,66,66,-19,-21,-24,66,-20,-23,66,]),'EQUAL':([37,38,47,48,50,51,52,71,72,73,74,75,76,77,78,80,82,86,89,90,91,92,93,94,95,101,102,105,109,114,115,117,121,125,128,131,134,135,136,],[-48,67,-37,-47,-50,-51,-52,67,67,67,67,67,67,67,-49,67,67,67,-26,-27,-28,-29,-30,-31,-32,-36,-53,-25,67,67,67,67,-19,-21,-24,67,-20,-23,67,]),'OF':([37,47,48,50,51,52,71,75,76,77,78,82,89,90,91,92,93,94,95,101,102,105,109,121,125,128,134,135,],[-48,-37,-47,-50,-51,-52,98,-33,-34,-35,-49,-22,-26,-27,-28,-29,-30,-31,-32,-36,-53,-25,-18,-19,-21,-24,-20,-23,]),'THEN':([37,47,48,50,51,52,72,75,76,77,78,82,89,90,91,92,93,94,95,101,102,105,109,121,125,128,134,135,],[-48,-37,-47,-50,-51,-52,99,-33,-34,-35,-49,-22,-26,-27,-28,-29,-30,-31,-32,-36,-53,-25,-18,-19,-21,-24,-20,-23,]),'LOOP':([37,47,48,50,51,52,73,75,76,77,78,82,89,90,91,92,93,94,95,101,102,105,109,121,125,128,134,135,],[-48,-37,-47,-50,-51,-52,100,-33,-34,-35,-49,-22,-26,-27,-28,-29,-30,-31,-32,-36,-53,-25,-18,-19,-21,-24,-20,-23,]),'ELSE':([37,47,48,50,51,52,75,76,77,78,82,89,90,91,92,93,94,95,101,102,105,109,114,121,125,128,134,135,],[-48,-37,-47,-50,-51,-52,-33,-34,-35,-49,-22,-26,-27,-28,-29,-30,-31,-32,-36,-53,-25,-18,124,-19,-21,-24,-20,-23,]),'POOL':([37,47,48,50,51,52,75,76,77,78,82,89,90,91,92,93,94,95,101,102,105,109,115,121,125,128,134,135,],[-48,-37,-47,-50,-51,-52,-33,-34,-35,-49,-22,-26,-27,-28,-29,-30,-31,-32,-36,-53,-25,-18,125,-19,-21,-24,-20,-23,]),'FI':([37,47,48,50,51,52,75,76,77,78,82,89,90,91,92,93,94,95,101,102,105,109,121,125,128,131,134,135,],[-48,-37,-47,-50,-51,-52,-33,-34,-35,-49,-22,-26,-27,-28,-29,-30,-31,-32,-36,-53,-25,-18,-19,-21,-24,134,-20,-23,]),'ESAC':([111,122,129,],[121,-41,-40,]),'ARROW':([130,],[133,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'class_list':([0,5,],[2,7,]),'def_class':([0,5,],[3,3,]),'feature_list':([8,17,18,21,],[10,22,23,30,]),'def_attr':([8,17,18,21,39,97,],[11,11,11,11,69,69,]),'def_func':([8,17,18,21,],[12,12,12,12,]),'empty':([8,17,18,20,21,29,58,108,127,],[13,13,13,28,13,35,85,85,85,]),'params':([20,],[26,]),'param_list':([20,34,],[27,56,]),'param':([20,34,],[29,29,]),'expr':([31,40,41,42,43,44,45,46,53,57,58,61,62,63,64,65,66,67,96,99,100,103,104,106,108,124,127,133,],[38,71,72,73,74,75,76,77,80,82,86,89,90,91,92,93,94,95,109,114,115,80,117,86,86,131,86,136,]),'atom':([31,40,41,42,43,44,45,46,53,57,58,61,62,63,64,65,66,67,96,99,100,103,104,106,108,124,127,133,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'block':([31,40,41,42,43,44,45,46,53,57,58,61,62,63,64,65,66,67,96,99,100,103,104,106,108,124,127,133,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'let_attrs':([39,97,],[68,110,]),'block_list':([53,103,],[79,116,]),'arg_list':([58,108,127,],[83,120,132,]),'arg_list_ne':([58,106,108,127,],[84,118,84,84,]),'case_list':([98,122,],[111,129,]),'case_elem':([98,122,],[112,112,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> class_list','program',1,'p_program','parser.py',26),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',31),
  ('class_list -> def_class SEMICOLON class_list','class_list',3,'p_class_list','parser.py',36),
  ('class_list -> def_class SEMICOLON','class_list',2,'p_class_list','parser.py',37),
  ('def_class -> CLASS TYPE OBRACKET feature_list CBRACKET','def_class',5,'p_def_class','parser.py',46),
  ('def_class -> CLASS TYPE INHERITS TYPE OBRACKET feature_list CBRACKET','def_class',7,'p_def_class','parser.py',47),
  ('feature_list -> def_attr SEMICOLON feature_list','feature_list',3,'p_feature_list','parser.py',57),
  ('feature_list -> def_func SEMICOLON feature_list','feature_list',3,'p_feature_list','parser.py',58),
  ('feature_list -> empty','feature_list',1,'p_feature_list','parser.py',59),
  ('def_attr -> ID COLON TYPE ASSIGN expr','def_attr',5,'p_def_attr_declaration','parser.py',67),
  ('def_attr -> ID COLON TYPE','def_attr',3,'p_def_attr_declaration','parser.py',68),
  ('def_func -> ID OPAREN params CPAREN COLON TYPE OBRACKET expr CBRACKET','def_func',9,'p_def_func','parser.py',78),
  ('params -> param_list','params',1,'p_params_ne','parser.py',84),
  ('params -> empty','params',1,'p_params_e','parser.py',89),
  ('param_list -> param COMMA param_list','param_list',3,'p_param_list','parser.py',94),
  ('param_list -> param empty','param_list',2,'p_param_list','parser.py',95),
  ('param -> ID COLON TYPE','param',3,'p_param','parser.py',103),
  ('expr -> LET let_attrs IN expr','expr',4,'p_expr_flow','parser.py',109),
  ('expr -> CASE expr OF case_list ESAC','expr',5,'p_expr_flow','parser.py',110),
  ('expr -> IF expr THEN expr ELSE expr FI','expr',7,'p_expr_flow','parser.py',111),
  ('expr -> WHILE expr LOOP expr POOL','expr',5,'p_expr_flow','parser.py',112),
  ('expr -> ID ASSIGN expr','expr',3,'p_expr_assign','parser.py',127),
  ('expr -> expr AT TYPE DOT ID OPAREN arg_list CPAREN','expr',8,'p_expr_func_all','parser.py',133),
  ('expr -> expr DOT ID OPAREN arg_list CPAREN','expr',6,'p_expr_func_all','parser.py',134),
  ('expr -> ID OPAREN arg_list CPAREN','expr',4,'p_expr_func_all','parser.py',135),
  ('expr -> expr PLUS expr','expr',3,'p_expr_operators_binary','parser.py',159),
  ('expr -> expr MINUS expr','expr',3,'p_expr_operators_binary','parser.py',160),
  ('expr -> expr STAR expr','expr',3,'p_expr_operators_binary','parser.py',161),
  ('expr -> expr DIV expr','expr',3,'p_expr_operators_binary','parser.py',162),
  ('expr -> expr LOWER expr','expr',3,'p_expr_operators_binary','parser.py',163),
  ('expr -> expr LOWEREQ expr','expr',3,'p_expr_operators_binary','parser.py',164),
  ('expr -> expr EQUAL expr','expr',3,'p_expr_operators_binary','parser.py',165),
  ('expr -> NOT expr','expr',2,'p_expr_operators_unary','parser.py',185),
  ('expr -> ISVOID expr','expr',2,'p_expr_operators_unary','parser.py',186),
  ('expr -> LNOT expr','expr',2,'p_expr_operators_unary','parser.py',187),
  ('expr -> OPAREN expr CPAREN','expr',3,'p_expr_group','parser.py',199),
  ('expr -> atom','expr',1,'p_expr_atom','parser.py',204),
  ('let_attrs -> def_attr COMMA let_attrs','let_attrs',3,'p_let_attrs','parser.py',209),
  ('let_attrs -> def_attr','let_attrs',1,'p_let_attrs','parser.py',210),
  ('case_list -> case_elem SEMICOLON case_list','case_list',3,'p_case_list','parser.py',218),
  ('case_list -> case_elem SEMICOLON','case_list',2,'p_case_list','parser.py',219),
  ('case_elem -> ID COLON TYPE ARROW expr','case_elem',5,'p_case_elem','parser.py',227),
  ('arg_list -> arg_list_ne','arg_list',1,'p_arg_list','parser.py',233),
  ('arg_list -> empty','arg_list',1,'p_arg_list','parser.py',234),
  ('arg_list_ne -> expr COMMA arg_list_ne','arg_list_ne',3,'p_arg_list_ne','parser.py',239),
  ('arg_list_ne -> expr','arg_list_ne',1,'p_arg_list_ne','parser.py',240),
  ('atom -> INT','atom',1,'p_atom_int','parser.py',248),
  ('atom -> ID','atom',1,'p_atom_id','parser.py',254),
  ('atom -> NEW TYPE','atom',2,'p_atom_new','parser.py',260),
  ('atom -> block','atom',1,'p_atom_block','parser.py',266),
  ('atom -> BOOL','atom',1,'p_atom_bool','parser.py',271),
  ('atom -> STRING','atom',1,'p_atom_atring','parser.py',277),
  ('block -> OBRACKET block_list CBRACKET','block',3,'p_block','parser.py',283),
  ('block_list -> expr SEMICOLON block_list','block_list',3,'p_block_list','parser.py',288),
  ('block_list -> expr SEMICOLON','block_list',2,'p_block_list','parser.py',289),
]
