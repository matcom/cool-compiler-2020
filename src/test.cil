TYPES -->

	type Object {
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

	type IO {
		method out_string:IO_out_string
		method out_int:IO_out_int
		method in_string:IO_in_string
		method in_int:IO_in_int
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

	type String {
		method length:String_length
		method concat:String_concat
		method substr:String_substr
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

	type Int {
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

	type Bool {
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

	type CellularAutomaton {
		attribute population_map:CellularAutomaton
		method init:CellularAutomaton_init
		method print:CellularAutomaton_print
		method num_cells:CellularAutomaton_num_cells
		method cell:CellularAutomaton_cell
		method cell_left_neighbor:CellularAutomaton_cell_left_neighbor
		method cell_right_neighbor:CellularAutomaton_cell_right_neighbor
		method cell_at_next_evolution:CellularAutomaton_cell_at_next_evolution
		method evolve:CellularAutomaton_evolve
		method out_string:IO_out_string
		method out_int:IO_out_int
		method in_string:IO_in_string
		method in_int:IO_in_int
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

	type Main {
		attribute cells:Main
		method main:Main_main
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

END <--

DATA -->

	data_0 "\n"
	data_1 "X"
	data_2 "X"
	data_3 "X"
	data_4 "X"
	data_5 "."
	data_6 "         X         "

END <--

CODE -->

	function IO_out_string {
		PARAM self
		PARAM str
		PRINT str
		RETURN self
	}

	function IO_out_int {
		PARAM self
		PARAM int
		LOCAL local_0
		ALLOC local_0 String
		TOSTR local_0 int
		PRINT local_0
		RETURN self
	}

	function IO_in_string {
		PARAM self
		LOCAL local_1
		ALLOC local_1 String
		READ local_1
		RETURN local_1
	}

	function IO_in_int {
		PARAM self
		LOCAL local_2
		ALLOC local_2 Int
		RINT local_2
		RETURN local_2
	}

	function Object_type_name {
		PARAM self
		LOCAL local_3
		ALLOC local_3 String
		TYPE local_3 self
		RETURN local_3
	}

	function Object_copy {
		PARAM self
		LOCAL local_4
		COPY local_4 self
		RETURN local_4
	}

	function String_length {
		PARAM self
		LOCAL local_5
		ALLOC local_5 Int
		STRLEN local_5 self
		RETURN local_5
	}

	function String_concat {
		PARAM self
		PARAM str
		LOCAL local_6
		ALLOC local_6 String
		STRCAT local_6 self str
		RETURN local_6
	}

	function String_substr {
		PARAM self
		PARAM from
		PARAM to
		LOCAL local_7
		ALLOC local_7 String
		STRSUB local_7 self from to
		RETURN local_7
	}

	function Object_abort {
		PARAM self
		LOCAL local_8
		ALLOC local_8 String
		TYPE local_8 self
		EXIT
	}

	function is_son {
		PARAM self
		PARAM class_s
		PARAM class_f
		LOCAL local_9
		LOCAL local_10
		LOCAL local_11
		ALLOC local_9 Bool
		ALLOC local_10 Bool
		ALLOC local_11 Int
		MOV local_11 2
		E local_9 class_s type_IO
		E local_10 class_f type_Object
		ADD local_9 local_9 local_10
		L local_9 local_9 local_11
		IF local_9 GOTO label_15
		MOV local_9 1
		RETURN local_9
		LABEL label_15
		E local_9 class_s type_String
		E local_10 class_f type_Object
		ADD local_9 local_9 local_10
		L local_9 local_9 local_11
		IF local_9 GOTO label_22
		MOV local_9 1
		RETURN local_9
		LABEL label_22
		E local_9 class_s type_Int
		E local_10 class_f type_Object
		ADD local_9 local_9 local_10
		L local_9 local_9 local_11
		IF local_9 GOTO label_29
		MOV local_9 1
		RETURN local_9
		LABEL label_29
		E local_9 class_s type_Bool
		E local_10 class_f type_Object
		ADD local_9 local_9 local_10
		L local_9 local_9 local_11
		IF local_9 GOTO label_36
		MOV local_9 1
		RETURN local_9
		LABEL label_36
		E local_9 class_s type_CellularAutomaton
		E local_10 class_f type_Object
		ADD local_9 local_9 local_10
		L local_9 local_9 local_11
		IF local_9 GOTO label_43
		MOV local_9 1
		RETURN local_9
		LABEL label_43
		E local_9 class_s type_CellularAutomaton
		E local_10 class_f type_IO
		ADD local_9 local_9 local_10
		L local_9 local_9 local_11
		IF local_9 GOTO label_45
		MOV local_9 1
		RETURN local_9
		LABEL label_45
		E local_9 class_s type_Main
		E local_10 class_f type_Object
		ADD local_9 local_9 local_10
		L local_9 local_9 local_11
		IF local_9 GOTO label_50
		MOV local_9 1
		RETURN local_9
		LABEL label_50
		MOV local_9 0
		RETURN local_9
	}

	function CellularAutomaton_init {
		PARAM self
		PARAM map
		SATTR self population_map map
		RETURN self
	}

	function CellularAutomaton_print {
		PARAM self
		LOCAL local_12
		LOCAL local_13
		LOCAL local_14
		LOCAL local_15
		LOCAL local_16
		LOCAL local_17
		LOCAL local_18
		ALLOC local_12 IO
		ALLOC local_13 String
		GATTR local_13 self population_map
		ALLOC local_14 String
		LDATA local_14 data_0
		LOCALSAVE
		ARG local_13
		ARG local_14
		ALLOC local_16 String
		TYPE local_16 local_13
		CALL local_15 local_16 concat
		LOCALSAVE
		ARG self
		ARG local_15
		ALLOC local_18 String
		TYPE local_18 local_12
		CALL local_17 local_18 out_string
		RETURN self
	}

	function CellularAutomaton_num_cells {
		PARAM self
		LOCAL local_19
		LOCAL local_20
		LOCAL local_21
		ALLOC local_19 String
		GATTR local_19 self population_map
		LOCALSAVE
		ARG local_19
		ALLOC local_21 String
		TYPE local_21 local_19
		CALL local_20 local_21 length
		RETURN local_20
	}

	function CellularAutomaton_cell {
		PARAM self
		PARAM position
		LOCAL local_22
		LOCAL local_23
		LOCAL local_24
		LOCAL local_25
		ALLOC local_22 String
		GATTR local_22 self population_map
		ALLOC local_23 Int
		MOV local_23 1
		LOCALSAVE
		ARG local_22
		ARG position
		ARG local_23
		ALLOC local_25 String
		TYPE local_25 local_22
		CALL local_24 local_25 substr
		RETURN local_24
	}

	function CellularAutomaton_cell_left_neighbor {
		PARAM self
		PARAM position
		LOCAL local_26
		LOCAL local_27
		LOCAL local_28
		LOCAL local_29
		LOCAL local_30
		LOCAL local_31
		LOCAL local_32
		LOCAL local_33
		LOCAL local_34
		LOCAL local_35
		LOCAL local_36
		LOCAL local_37
		LOCAL local_38
		LOCAL local_39
		LOCAL local_40
		LOCAL local_41
		ALLOC local_41 Bool
		ALLOC local_27 Bool
		ALLOC local_26 Int
		MOV local_26 0
		E local_27 position local_26
		IF local_27 GOTO label_57
		ALLOC local_36 CellularAutomaton
		ALLOC local_37 Int
		MOV local_37 1
		ALLOC local_38 Int
		SUB local_38 position local_37
		LOCALSAVE
		ARG self
		ARG local_38
		ALLOC local_40 String
		TYPE local_40 local_36
		CALL local_39 local_40 cell
		MOV local_41 local_39
		GOTO label_58
		LABEL label_57
		ALLOC local_28 CellularAutomaton
		ALLOC local_29 CellularAutomaton
		LOCALSAVE
		ARG self
		ALLOC local_31 String
		TYPE local_31 local_29
		CALL local_30 local_31 num_cells
		ALLOC local_32 Int
		MOV local_32 1
		ALLOC local_33 Int
		SUB local_33 local_30 local_32
		LOCALSAVE
		ARG self
		ARG local_33
		ALLOC local_35 String
		TYPE local_35 local_28
		CALL local_34 local_35 cell
		MOV local_41 local_34
		LABEL label_58
		RETURN local_41
	}

	function CellularAutomaton_cell_right_neighbor {
		PARAM self
		PARAM position
		LOCAL local_42
		LOCAL local_43
		LOCAL local_44
		LOCAL local_45
		LOCAL local_46
		LOCAL local_47
		LOCAL local_48
		LOCAL local_49
		LOCAL local_50
		LOCAL local_51
		LOCAL local_52
		LOCAL local_53
		LOCAL local_54
		LOCAL local_55
		LOCAL local_56
		LOCAL local_57
		ALLOC local_57 Bool
		ALLOC local_47 Bool
		ALLOC local_42 CellularAutomaton
		LOCALSAVE
		ARG self
		ALLOC local_44 String
		TYPE local_44 local_42
		CALL local_43 local_44 num_cells
		ALLOC local_45 Int
		MOV local_45 1
		ALLOC local_46 Int
		SUB local_46 local_43 local_45
		E local_47 position local_46
		IF local_47 GOTO label_59
		ALLOC local_52 CellularAutomaton
		ALLOC local_53 Int
		MOV local_53 1
		ALLOC local_54 Int
		ADD local_54 position local_53
		LOCALSAVE
		ARG self
		ARG local_54
		ALLOC local_56 String
		TYPE local_56 local_52
		CALL local_55 local_56 cell
		MOV local_57 local_55
		GOTO label_60
		LABEL label_59
		ALLOC local_48 CellularAutomaton
		ALLOC local_49 Int
		MOV local_49 0
		LOCALSAVE
		ARG self
		ARG local_49
		ALLOC local_51 String
		TYPE local_51 local_48
		CALL local_50 local_51 cell
		MOV local_57 local_50
		LABEL label_60
		RETURN local_57
	}

	function CellularAutomaton_cell_at_next_evolution {
		PARAM self
		PARAM position
		LOCAL local_58
		LOCAL local_59
		LOCAL local_60
		LOCAL local_61
		LOCAL local_62
		LOCAL local_63
		LOCAL local_64
		LOCAL local_65
		LOCAL local_66
		LOCAL local_67
		LOCAL local_68
		LOCAL local_69
		LOCAL local_70
		LOCAL local_71
		LOCAL local_72
		LOCAL local_73
		LOCAL local_74
		LOCAL local_75
		LOCAL local_76
		LOCAL local_77
		LOCAL local_78
		LOCAL local_79
		LOCAL local_80
		LOCAL local_81
		LOCAL local_82
		LOCAL local_83
		LOCAL local_84
		LOCAL local_85
		ALLOC local_85 Bool
		ALLOC local_83 Bool
		ALLOC local_65 Bool
		ALLOC local_62 Bool
		ALLOC local_58 CellularAutomaton
		LOCALSAVE
		ARG self
		ARG position
		ALLOC local_60 String
		TYPE local_60 local_58
		CALL local_59 local_60 cell
		ALLOC local_61 String
		LDATA local_61 data_4
		E local_62 local_59 local_61
		IF local_62 GOTO label_61
		ALLOC local_64 Int
		MOV local_64 0
		MOV local_65 local_64
		GOTO label_62
		LABEL label_61
		ALLOC local_63 Int
		MOV local_63 1
		MOV local_65 local_63
		LABEL label_62
		ALLOC local_72 Bool
		ALLOC local_69 Bool
		ALLOC local_66 CellularAutomaton
		LOCALSAVE
		ARG self
		ARG position
		ALLOC local_68 String
		TYPE local_68 local_66
		CALL local_67 local_68 cell_left_neighbor
		E local_69 local_67 local_61
		IF local_69 GOTO label_63
		ALLOC local_71 Int
		MOV local_71 0
		MOV local_72 local_71
		GOTO label_64
		LABEL label_63
		ALLOC local_70 Int
		MOV local_70 1
		MOV local_72 local_70
		LABEL label_64
		ALLOC local_73 Int
		ADD local_73 local_65 local_72
		ALLOC local_80 Bool
		ALLOC local_77 Bool
		ALLOC local_74 CellularAutomaton
		LOCALSAVE
		ARG self
		ARG position
		ALLOC local_76 String
		TYPE local_76 local_74
		CALL local_75 local_76 cell_right_neighbor
		E local_77 local_75 local_61
		IF local_77 GOTO label_65
		ALLOC local_79 Int
		MOV local_79 0
		MOV local_80 local_79
		GOTO label_66
		LABEL label_65
		ALLOC local_78 Int
		MOV local_78 1
		MOV local_80 local_78
		LABEL label_66
		ALLOC local_81 Int
		ADD local_81 local_73 local_80
		ALLOC local_82 Int
		MOV local_82 1
		E local_83 local_81 local_82
		IF local_83 GOTO label_67
		ALLOC local_84 String
		LDATA local_84 data_5
		MOV local_85 local_84
		GOTO label_68
		LABEL label_67
		MOV local_85 local_61
		LABEL label_68
		RETURN local_85
	}

	function CellularAutomaton_evolve {
		PARAM self
		LOCAL local_86
		LOCAL local_87
		LOCAL local_88
		LOCAL local_89
		LOCAL local_90
		LOCAL local_91
		LOCAL local_92
		LOCAL local_93
		LOCAL local_94
		LOCAL local_95
		LOCAL local_96
		LOCAL local_97
		LOCAL local_98
		LOCAL local_99
		LOCAL local_100
		ALLOC local_86 Int
		ALLOC local_87 CellularAutomaton
		LOCALSAVE
		ARG self
		ALLOC local_89 String
		TYPE local_89 local_87
		CALL local_88 local_89 num_cells
		ALLOC local_90 Int
		MOV local_90 local_88
		ALLOC local_91 String
		ALLOC local_100 void
		LABEL label_69
		ALLOC local_92 Bool
		L local_92 local_86 local_90
		IF local_92 GOTO label_70
		GOTO label_71
		LABEL label_70
		ALLOC local_93 CellularAutomaton
		LOCALSAVE
		ARG self
		ARG local_86
		ALLOC local_95 String
		TYPE local_95 local_93
		CALL local_94 local_95 cell_at_next_evolution
		LOCALSAVE
		ARG local_91
		ARG local_94
		ALLOC local_97 String
		TYPE local_97 local_91
		CALL local_96 local_97 concat
		COPY local_91 local_96
		ALLOC local_98 Int
		MOV local_98 1
		ALLOC local_99 Int
		ADD local_99 local_86 local_98
		COPY local_86 local_99
		GOTO label_69
		LABEL label_71
		SATTR self population_map local_91
		RETURN self
	}

	function Main_main {
		PARAM self
		LOCAL local_101
		LOCAL local_102
		LOCAL local_103
		LOCAL local_104
		LOCAL local_105
		LOCAL local_106
		LOCAL local_107
		LOCAL local_108
		LOCAL local_109
		LOCAL local_110
		LOCAL local_111
		LOCAL local_112
		LOCAL local_113
		LOCAL local_114
		LOCAL local_115
		LOCAL local_116
		LOCAL local_117
		LOCAL local_118
		LOCAL local_119
		LOCAL local_120
		LOCAL local_121
		ALLOC local_101 CellularAutomaton
		ALLOC local_102 String
		SETSTR local_102 
		SATTR local_101 population_map local_102
		ALLOC local_103 String
		LDATA local_103 data_6
		LOCALSAVE
		ARG local_101
		ARG local_103
		ALLOC local_105 String
		TYPE local_105 local_101
		CALL local_104 local_105 init
		SATTR self cells local_104
		ALLOC local_106 CellularAutomaton
		GATTR local_106 self cells
		LOCALSAVE
		ARG local_106
		ALLOC local_108 String
		TYPE local_108 local_106
		CALL local_107 local_108 print
		ALLOC local_109 Int
		MOV local_109 20
		ALLOC local_110 Int
		MOV local_110 local_109
		ALLOC local_121 void
		LABEL label_72
		ALLOC local_112 Bool
		ALLOC local_111 Int
		MOV local_111 0
		L local_112 local_111 local_110
		IF local_112 GOTO label_73
		GOTO label_74
		LABEL label_73
		ALLOC local_113 CellularAutomaton
		GATTR local_113 self cells
		LOCALSAVE
		ARG local_113
		ALLOC local_115 String
		TYPE local_115 local_113
		CALL local_114 local_115 evolve
		ALLOC local_116 CellularAutomaton
		GATTR local_116 self cells
		LOCALSAVE
		ARG local_116
		ALLOC local_118 String
		TYPE local_118 local_116
		CALL local_117 local_118 print
		ALLOC local_119 Int
		MOV local_119 1
		ALLOC local_120 Int
		SUB local_120 local_110 local_119
		COPY local_110 local_120
		GOTO label_72
		LABEL label_74
		RETURN self
	}

	function main {
		LOCAL local_122
		LOCAL local_123
		LOCAL local_124
		LOCAL local_125
		ALLOC local_122 Main
		ALLOC local_124 CellularAutomaton
		SATTR local_122 cells local_124
		LOCALSAVE
		ARG local_122
		ALLOC local_125 String
		SETSTR local_125 Main
		CALL local_123 local_125 main
	}

END <--