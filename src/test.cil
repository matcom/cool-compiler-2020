TYPES -->

	type Object {
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

	type IO {
		method out_string:IO_out_string
		method out_int:IO_out_int
		method in_string:IO_in_string
		method in_int:IO_in_int
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

	type String {
		method length:String_length
		method concat:String_concat
		method substr:String_substr
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

	type Int {
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

	type Bool {
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

	type List {
		method isNil:List_isNil
		method cons:List_cons
		method car:List_car
		method cdr:List_cdr
		method rev:List_rev
		method sort:List_sort
		method insert:List_insert
		method rcons:List_rcons
		method print_list:List_print_list
		method out_string:IO_out_string
		method out_int:IO_out_int
		method in_string:IO_in_string
		method in_int:IO_in_int
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

	type Cons {
		attribute xcar:Cons
		attribute xcdr:Cons
		method isNil:Cons_isNil
		method init:Cons_init
		method car:Cons_car
		method cdr:Cons_cdr
		method rev:Cons_rev
		method sort:Cons_sort
		method insert:Cons_insert
		method rcons:Cons_rcons
		method print_list:Cons_print_list
		method cons:List_cons
		method out_string:IO_out_string
		method out_int:IO_out_int
		method in_string:IO_in_string
		method in_int:IO_in_int
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

	type Nil {
		method isNil:Nil_isNil
		method rev:Nil_rev
		method sort:Nil_sort
		method insert:Nil_insert
		method rcons:Nil_rcons
		method print_list:Nil_print_list
		method cons:List_cons
		method car:List_car
		method cdr:List_cdr
		method out_string:IO_out_string
		method out_int:IO_out_int
		method in_string:IO_in_string
		method in_int:IO_in_int
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

	type Main {
		attribute l:Main
		method iota:Main_iota
		method main:Main_main
		method out_string:IO_out_string
		method out_int:IO_out_int
		method in_string:IO_in_string
		method in_int:IO_in_int
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

END <--

DATA -->

	data_0 "\n"
	data_1 "How many numbers to sort? "

END <--

CODE -->

	function IO_out_string {
		PARAM self
		PARAM str
		PRINT str
		RETURN self
	}

	function IO_out_int {
		PARAM self
		PARAM int
		PINT int
		RETURN self
	}

	function IO_in_string {
		PARAM self
		LOCAL local_0
		ALLOC local_0 String
		READ local_0
		RETURN local_0
	}

	function IO_in_int {
		PARAM self
		LOCAL local_1
		ALLOC local_0 Int
		RINT local_0
		RETURN local_0
	}

	function Object_type_name {
		PARAM self
		LOCAL local_2
		LOCAL local_3
		ALLOC local_0 Int
		ALLOC local_1 String
		TYPE local_0 self
		TYPENAME local_1 local_0
		RETURN local_1
	}

	function Object_copy {
		PARAM self
		LOCAL local_4
		COPY local_0 self
		RETURN local_0
	}

	function String_length {
		PARAM self
		LOCAL local_5
		ALLOC local_0 Int
		STRLEN local_0 self
		RETURN local_0
	}

	function String_concat {
		PARAM self
		PARAM str
		LOCAL local_6
		ALLOC local_0 String
		STRCAT local_0 self str
		RETURN local_0
	}

	function String_substr {
		PARAM self
		PARAM from
		PARAM to
		LOCAL local_7
		ALLOC local_0 String
		STRSUB local_0 self from to
		RETURN local_0
	}

	function Object_abort {
		PARAM self
		LOCAL local_8
		ALLOC local_0 Int
		TYPE local_0 self
		EXIT
	}

	function Object_Attributes_Initialization {
		PARAM instance
		LOCAL local_0
		ALLOC local_0 void
		RETURN local_0
	}

	function IO_Attributes_Initialization {
		PARAM instance
		LOCAL local_0
		ALLOC local_0 void
		RETURN local_0
	}

	function String_Attributes_Initialization {
		PARAM instance
		LOCAL local_0
		ALLOC local_0 void
		RETURN local_0
	}

	function Int_Attributes_Initialization {
		PARAM instance
		LOCAL local_0
		ALLOC local_0 void
		RETURN local_0
	}

	function Bool_Attributes_Initialization {
		PARAM instance
		LOCAL local_0
		ALLOC local_0 void
		RETURN local_0
	}

	function List_Attributes_Initialization {
		PARAM instance
		LOCAL local_0
		ALLOC local_0 void
		RETURN local_0
	}

	function List_isNil {
		PARAM self
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		LOCALSAVE
		ARG self
		ALLOC local_1 Int
		TYPE local_1 self
		CALL local_0 local_1 abort
		ALLOC local_2 Bool
		MOV local_2 True
		RETURN local_2
	}

	function List_cons {
		PARAM self
		PARAM hd
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		LOCAL local_3
		ALLOC local_0 Cons
		ALLOC local_1 Cons
		MOV local_1 local_0
		LOCALSAVE
		ARG local_1
		ARG hd
		ARG self
		ALLOC local_3 Int
		TYPE local_3 local_1
		CALL local_2 local_3 init
		RETURN local_2
	}

	function List_car {
		PARAM self
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		LOCALSAVE
		ARG self
		ALLOC local_1 Int
		TYPE local_1 self
		CALL local_0 local_1 abort
		ALLOC local_2 Int
		RETURN local_2
	}

	function List_cdr {
		PARAM self
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		LOCALSAVE
		ARG self
		ALLOC local_1 Int
		TYPE local_1 self
		CALL local_0 local_1 abort
		ALLOC local_2 List
		RETURN local_2
	}

	function List_rev {
		PARAM self
		LOCAL local_0
		LOCAL local_1
		LOCALSAVE
		ARG self
		ALLOC local_1 Int
		TYPE local_1 self
		CALL local_0 local_1 cdr
		RETURN local_0
	}

	function List_sort {
		PARAM self
		LOCAL local_0
		LOCAL local_1
		LOCALSAVE
		ARG self
		ALLOC local_1 Int
		TYPE local_1 self
		CALL local_0 local_1 cdr
		RETURN local_0
	}

	function List_insert {
		PARAM self
		PARAM i
		LOCAL local_0
		LOCAL local_1
		LOCALSAVE
		ARG self
		ALLOC local_1 Int
		TYPE local_1 self
		CALL local_0 local_1 cdr
		RETURN local_0
	}

	function List_rcons {
		PARAM self
		PARAM i
		LOCAL local_0
		LOCAL local_1
		LOCALSAVE
		ARG self
		ALLOC local_1 Int
		TYPE local_1 self
		CALL local_0 local_1 cdr
		RETURN local_0
	}

	function List_print_list {
		PARAM self
		LOCAL local_0
		LOCAL local_1
		LOCALSAVE
		ARG self
		ALLOC local_1 Int
		TYPE local_1 self
		CALL local_0 local_1 abort
		RETURN local_0
	}

	function Cons_Attributes_Initialization {
		PARAM instance
		LOCAL local_0
		ALLOC local_0 void
		SATTR instance xcar local_0
		SATTR instance xcdr local_0
		RETURN local_0
	}

	function Cons_isNil {
		PARAM self
		LOCAL local_0
		ALLOC local_0 Bool
		MOV local_0 False
		RETURN local_0
	}

	function Cons_init {
		PARAM self
		PARAM hd
		PARAM tl
		SATTR self xcar hd
		SATTR self xcdr tl
		RETURN self
	}

	function Cons_car {
		PARAM self
		LOCAL local_0
		GATTR local_0 self xcar
		RETURN local_0
	}

	function Cons_cdr {
		PARAM self
		LOCAL local_0
		GATTR local_0 self xcdr
		RETURN local_0
	}

	function Cons_rev {
		PARAM self
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		LOCAL local_3
		LOCAL local_4
		LOCAL local_5
		GATTR local_0 self xcdr
		LOCALSAVE
		ARG local_0
		ALLOC local_2 Int
		TYPE local_2 local_0
		CALL local_1 local_2 rev
		GATTR local_3 self xcar
		LOCALSAVE
		ARG local_1
		ARG local_3
		ALLOC local_5 Int
		TYPE local_5 local_1
		CALL local_4 local_5 rcons
		RETURN local_4
	}

	function Cons_sort {
		PARAM self
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		LOCAL local_3
		LOCAL local_4
		LOCAL local_5
		GATTR local_0 self xcdr
		LOCALSAVE
		ARG local_0
		ALLOC local_2 Int
		TYPE local_2 local_0
		CALL local_1 local_2 sort
		GATTR local_3 self xcar
		LOCALSAVE
		ARG local_1
		ARG local_3
		ALLOC local_5 Int
		TYPE local_5 local_1
		CALL local_4 local_5 insert
		RETURN local_4
	}

	function Cons_insert {
		PARAM self
		PARAM i
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		LOCAL local_3
		LOCAL local_4
		LOCAL local_5
		LOCAL local_6
		LOCAL local_7
		LOCAL local_8
		LOCAL local_9
		LOCAL local_10
		LOCAL local_11
		LOCAL local_12
		ALLOC local_1 Bool
		GATTR local_0 self xcar
		L local_1 i local_0
		IF local_1 GOTO label_1
		ALLOC local_5 Cons
		GATTR local_6 self xcar
		GATTR local_7 self xcdr
		LOCALSAVE
		ARG local_7
		ARG i
		ALLOC local_9 Int
		TYPE local_9 local_7
		CALL local_8 local_9 insert
		LOCALSAVE
		ARG local_5
		ARG local_6
		ARG local_8
		ALLOC local_11 Int
		TYPE local_11 local_5
		CALL local_10 local_11 init
		MOV local_12 local_10
		GOTO label_2
		LABEL label_1
		ALLOC local_2 Cons
		LOCALSAVE
		ARG local_2
		ARG i
		ARG self
		ALLOC local_4 Int
		TYPE local_4 local_2
		CALL local_3 local_4 init
		MOV local_12 local_3
		LABEL label_2
		RETURN local_12
	}

	function Cons_rcons {
		PARAM self
		PARAM i
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		LOCAL local_3
		LOCAL local_4
		LOCAL local_5
		LOCAL local_6
		ALLOC local_0 Cons
		GATTR local_1 self xcar
		GATTR local_2 self xcdr
		LOCALSAVE
		ARG local_2
		ARG i
		ALLOC local_4 Int
		TYPE local_4 local_2
		CALL local_3 local_4 rcons
		LOCALSAVE
		ARG local_0
		ARG local_1
		ARG local_3
		ALLOC local_6 Int
		TYPE local_6 local_0
		CALL local_5 local_6 init
		RETURN local_5
	}

	function Cons_print_list {
		PARAM self
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		LOCAL local_3
		LOCAL local_4
		LOCAL local_5
		LOCAL local_6
		LOCAL local_7
		LOCAL local_8
		GATTR local_0 self xcar
		LOCALSAVE
		ARG self
		ARG local_0
		ALLOC local_2 Int
		TYPE local_2 self
		CALL local_1 local_2 out_int
		ALLOC local_3 String
		LDATA local_3 data_0
		LOCALSAVE
		ARG self
		ARG local_3
		ALLOC local_5 Int
		TYPE local_5 self
		CALL local_4 local_5 out_string
		GATTR local_6 self xcdr
		LOCALSAVE
		ARG local_6
		ALLOC local_8 Int
		TYPE local_8 local_6
		CALL local_7 local_8 print_list
		RETURN local_7
	}

	function Nil_Attributes_Initialization {
		PARAM instance
		LOCAL local_0
		ALLOC local_0 void
		RETURN local_0
	}

	function Nil_isNil {
		PARAM self
		LOCAL local_0
		ALLOC local_0 Bool
		MOV local_0 True
		RETURN local_0
	}

	function Nil_rev {
		PARAM self
		RETURN self
	}

	function Nil_sort {
		PARAM self
		RETURN self
	}

	function Nil_insert {
		PARAM self
		PARAM i
		LOCAL local_0
		LOCAL local_1
		LOCALSAVE
		ARG self
		ARG i
		ALLOC local_1 Int
		TYPE local_1 self
		CALL local_0 local_1 rcons
		RETURN local_0
	}

	function Nil_rcons {
		PARAM self
		PARAM i
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		ALLOC local_0 Cons
		LOCALSAVE
		ARG local_0
		ARG i
		ARG self
		ALLOC local_2 Int
		TYPE local_2 local_0
		CALL local_1 local_2 init
		RETURN local_1
	}

	function Nil_print_list {
		PARAM self
		LOCAL local_0
		ALLOC local_0 Bool
		MOV local_0 True
		RETURN local_0
	}

	function Main_Attributes_Initialization {
		PARAM instance
		LOCAL local_0
		ALLOC local_0 void
		SATTR instance l local_0
		RETURN local_0
	}

	function Main_iota {
		PARAM self
		PARAM i
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		LOCAL local_3
		LOCAL local_4
		LOCAL local_5
		LOCAL local_6
		LOCAL local_7
		LOCAL local_8
		LOCAL local_9
		LOCAL local_10
		LOCAL local_11
		ALLOC local_0 Nil
		SATTR self l local_0
		ALLOC local_1 Int
		MOV local_1 0
		ALLOC local_2 Int
		MOV local_2 local_1
		ALLOC local_10 void
		LABEL label_3
		ALLOC local_3 Bool
		L local_3 local_2 i
		IF local_3 GOTO label_4
		GOTO label_5
		LABEL label_4
		ALLOC local_4 Cons
		GATTR local_5 self l
		LOCALSAVE
		ARG local_4
		ARG local_2
		ARG local_5
		ALLOC local_7 Int
		TYPE local_7 local_4
		CALL local_6 local_7 init
		SATTR self l local_6
		ALLOC local_8 Int
		MOV local_8 1
		ALLOC local_9 Int
		ADD local_9 local_2 local_8
		MOV local_2 local_9
		GOTO label_3
		LABEL label_5
		GATTR local_11 self l
		RETURN local_11
	}

	function Main_main {
		PARAM self
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		LOCAL local_3
		LOCAL local_4
		LOCAL local_5
		LOCAL local_6
		LOCAL local_7
		LOCAL local_8
		LOCAL local_9
		LOCAL local_10
		LOCAL local_11
		LOCAL local_12
		ALLOC local_0 String
		LDATA local_0 data_1
		LOCALSAVE
		ARG self
		ARG local_0
		ALLOC local_2 Int
		TYPE local_2 self
		CALL local_1 local_2 out_string
		LOCALSAVE
		ARG self
		ALLOC local_4 Int
		TYPE local_4 self
		CALL local_3 local_4 in_int
		LOCALSAVE
		ARG self
		ARG local_3
		ALLOC local_6 Int
		TYPE local_6 self
		CALL local_5 local_6 iota
		LOCALSAVE
		ARG local_5
		ALLOC local_8 Int
		TYPE local_8 local_5
		CALL local_7 local_8 rev
		LOCALSAVE
		ARG local_7
		ALLOC local_10 Int
		TYPE local_10 local_7
		CALL local_9 local_10 sort
		LOCALSAVE
		ARG local_9
		ALLOC local_12 Int
		TYPE local_12 local_9
		CALL local_11 local_12 print_list
		RETURN local_11
	}

	function main {
		LOCAL local_0
		LOCAL local_1
		LOCAL local_0
		LOCAL local_3
		ALLOC local_0 Main
		LOCALSAVE
		ARG local_0
		ALLOC local_3 Int
		TYPE local_3 local_0
		CALL local_1 local_3 main
	}

END <--