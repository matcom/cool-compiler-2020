TYPES -->

	type Object {
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

	type IO {
		method out_string:IO_out_string
		method out_int:IO_out_int
		method in_string:IO_in_string
		method in_int:IO_in_int
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

	type String {
		method length:String_length
		method concat:String_concat
		method substr:String_substr
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

	type Int {
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

	type Bool {
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

	type Graph {
		attribute vertices:Graph
		attribute edges:Graph
		method add_vertice:Graph_add_vertice
		method print_E:Graph_print_E
		method print_V:Graph_print_V
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

	type Vertice {
		attribute num:Vertice
		attribute out:Vertice
		method outgoing:Vertice_outgoing
		method number:Vertice_number
		method init:Vertice_init
		method add_out:Vertice_add_out
		method print:Vertice_print
		method out_string:IO_out_string
		method out_int:IO_out_int
		method in_string:IO_in_string
		method in_int:IO_in_int
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

	type Edge {
		attribute from:Edge
		attribute to:Edge
		attribute weight:Edge
		method init:Edge_init
		method print:Edge_print
		method out_string:IO_out_string
		method out_int:IO_out_int
		method in_string:IO_in_string
		method in_int:IO_in_int
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

	type EList {
		attribute car:EList
		method isNil:EList_isNil
		method head:EList_head
		method tail:EList_tail
		method cons:EList_cons
		method append:EList_append
		method print:EList_print
		method out_string:IO_out_string
		method out_int:IO_out_int
		method in_string:IO_in_string
		method in_int:IO_in_int
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

	type ECons {
		attribute car:EList
		attribute cdr:ECons
		method isNil:ECons_isNil
		method head:ECons_head
		method tail:ECons_tail
		method init:ECons_init
		method print:ECons_print
		method cons:EList_cons
		method append:EList_append
		method out_string:IO_out_string
		method out_int:IO_out_int
		method in_string:IO_in_string
		method in_int:IO_in_int
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

	type VList {
		attribute car:VList
		method isNil:VList_isNil
		method head:VList_head
		method tail:VList_tail
		method cons:VList_cons
		method print:VList_print
		method out_string:IO_out_string
		method out_int:IO_out_int
		method in_string:IO_in_string
		method in_int:IO_in_int
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

	type VCons {
		attribute car:VList
		attribute cdr:VCons
		method isNil:VCons_isNil
		method head:VCons_head
		method tail:VCons_tail
		method init:VCons_init
		method print:VCons_print
		method cons:VList_cons
		method out_string:IO_out_string
		method out_int:IO_out_int
		method in_string:IO_in_string
		method in_int:IO_in_int
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

	type Parse {
		attribute boolop:Parse
		attribute rest:Parse
		method read_input:Parse_read_input
		method parse_line:Parse_parse_line
		method c2i:Parse_c2i
		method a2i:Parse_a2i
		method a2i_aux:Parse_a2i_aux
		method out_string:IO_out_string
		method out_int:IO_out_int
		method in_string:IO_in_string
		method in_int:IO_in_int
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

	type Main {
		attribute boolop:Parse
		attribute rest:Parse
		attribute g:Main
		method main:Main_main
		method read_input:Parse_read_input
		method parse_line:Parse_parse_line
		method c2i:Parse_c2i
		method a2i:Parse_a2i
		method a2i_aux:Parse_a2i_aux
		method out_string:IO_out_string
		method out_int:IO_out_int
		method in_string:IO_in_string
		method in_int:IO_in_int
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

	type BoolOp {
		method and:BoolOp_and
		method or:BoolOp_or
		method abort:Object_abort
		method type_name:Object_type_name
		method copy:Object_copy
	}

END <--

DATA -->

	data_0 " ("
	data_1 ","
	data_2 ")"
	data_3 "\n"
	data_4 "\n"
	data_5 "\n"
	data_6 ""
	data_7 "0"
	data_8 "1"
	data_9 "2"
	data_10 "3"
	data_11 "4"
	data_12 "5"
	data_13 "6"
	data_14 "7"
	data_15 "8"
	data_16 "9"
	data_17 "-"
	data_18 " "
	data_19 " "
	data_20 ","
	data_21 ""
	data_22 ""

END <--

CODE -->

	function IO_out_string {
		PARAM self
		PARAM str
		PRINT str
		RETURN self
	}

	function IO_out_int {
		PARAM self
		PARAM int
		PINT int
		RETURN self
	}

	function IO_in_string {
		PARAM self
		LOCAL local_0
		ALLOC local_0 String
		READ local_0
		RETURN local_0
	}

	function IO_in_int {
		PARAM self
		LOCAL local_1
		ALLOC local_0 Int
		RINT local_0
		RETURN local_0
	}

	function Object_type_name {
		PARAM self
		LOCAL local_2
		LOCAL local_3
		ALLOC local_0 Int
		ALLOC local_1 String
		TYPE local_0 self
		TYPENAME local_1 local_0
		RETURN local_1
	}

	function Object_copy {
		PARAM self
		LOCAL local_4
		COPY local_0 self
		RETURN local_0
	}

	function String_length {
		PARAM self
		LOCAL local_5
		ALLOC local_0 Int
		STRLEN local_0 self
		RETURN local_0
	}

	function String_concat {
		PARAM self
		PARAM str
		LOCAL local_6
		ALLOC local_0 String
		STRCAT local_0 self str
		RETURN local_0
	}

	function String_substr {
		PARAM self
		PARAM from
		PARAM to
		LOCAL local_7
		ALLOC local_0 String
		STRSUB local_0 self from to
		RETURN local_0
	}

	function Object_abort {
		PARAM self
		LOCAL local_8
		ALLOC local_0 Int
		TYPE local_0 self
		EXIT
	}

	function Graph_add_vertice {
		PARAM self
		PARAM v
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		LOCAL local_3
		LOCAL local_4
		LOCAL local_5
		LOCAL local_6
		LOCAL local_7
		LOCALSAVE
		ARG v
		ALLOC local_1 Int
		TYPE local_1 v
		CALL local_0 local_1 outgoing
		ALLOC local_2 EList
		GATTR local_2 self edges
		LOCALSAVE
		ARG local_0
		ARG local_2
		ALLOC local_4 Int
		TYPE local_4 local_0
		CALL local_3 local_4 append
		SATTR self edges local_3
		ALLOC local_5 VList
		GATTR local_5 self vertices
		LOCALSAVE
		ARG local_5
		ARG v
		ALLOC local_7 Int
		TYPE local_7 local_5
		CALL local_6 local_7 cons
		SATTR self vertices local_6
		RETURN local_6
	}

	function Graph_print_E {
		PARAM self
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		ALLOC local_0 EList
		GATTR local_0 self edges
		LOCALSAVE
		ARG local_0
		ALLOC local_2 Int
		TYPE local_2 local_0
		CALL local_1 local_2 print
		RETURN local_1
	}

	function Graph_print_V {
		PARAM self
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		ALLOC local_0 VList
		GATTR local_0 self vertices
		LOCALSAVE
		ARG local_0
		ALLOC local_2 Int
		TYPE local_2 local_0
		CALL local_1 local_2 print
		RETURN local_1
	}

	function Vertice_outgoing {
		PARAM self
		LOCAL local_0
		ALLOC local_0 EList
		GATTR local_0 self out
		RETURN local_0
	}

	function Vertice_number {
		PARAM self
		LOCAL local_0
		ALLOC local_0 Int
		GATTR local_0 self num
		RETURN local_0
	}

	function Vertice_init {
		PARAM self
		PARAM n
		SATTR self num n
		RETURN self
	}

	function Vertice_add_out {
		PARAM self
		PARAM s
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		ALLOC local_0 EList
		GATTR local_0 self out
		LOCALSAVE
		ARG local_0
		ARG s
		ALLOC local_2 Int
		TYPE local_2 local_0
		CALL local_1 local_2 cons
		SATTR self out local_1
		RETURN self
	}

	function Vertice_print {
		PARAM self
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		LOCAL local_3
		LOCAL local_4
		LOCAL local_5
		ALLOC local_0 Int
		GATTR local_0 self num
		LOCALSAVE
		ARG self
		ARG local_0
		ALLOC local_2 Int
		TYPE local_2 self
		CALL local_1 local_2 out_int
		ALLOC local_3 EList
		GATTR local_3 self out
		LOCALSAVE
		ARG local_3
		ALLOC local_5 Int
		TYPE local_5 local_3
		CALL local_4 local_5 print
		RETURN local_4
	}

	function Edge_init {
		PARAM self
		PARAM f
		PARAM t
		PARAM w
		SATTR self from f
		SATTR self to t
		SATTR self weight w
		RETURN self
	}

	function Edge_print {
		PARAM self
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		LOCAL local_3
		LOCAL local_4
		LOCAL local_5
		LOCAL local_6
		LOCAL local_7
		LOCAL local_8
		LOCAL local_9
		LOCAL local_10
		LOCAL local_11
		LOCAL local_12
		LOCAL local_13
		LOCAL local_14
		LOCAL local_15
		LOCAL local_16
		LOCAL local_17
		ALLOC local_0 String
		LDATA local_0 data_0
		LOCALSAVE
		ARG self
		ARG local_0
		ALLOC local_2 Int
		TYPE local_2 self
		CALL local_1 local_2 out_string
		ALLOC local_3 Int
		GATTR local_3 self from
		LOCALSAVE
		ARG self
		ARG local_3
		ALLOC local_5 Int
		TYPE local_5 self
		CALL local_4 local_5 out_int
		ALLOC local_6 String
		LDATA local_6 data_20
		LOCALSAVE
		ARG self
		ARG local_6
		ALLOC local_8 Int
		TYPE local_8 self
		CALL local_7 local_8 out_string
		ALLOC local_9 Int
		GATTR local_9 self to
		LOCALSAVE
		ARG self
		ARG local_9
		ALLOC local_11 Int
		TYPE local_11 self
		CALL local_10 local_11 out_int
		ALLOC local_12 String
		LDATA local_12 data_2
		LOCALSAVE
		ARG self
		ARG local_12
		ALLOC local_14 Int
		TYPE local_14 self
		CALL local_13 local_14 out_string
		ALLOC local_15 Int
		GATTR local_15 self weight
		LOCALSAVE
		ARG self
		ARG local_15
		ALLOC local_17 Int
		TYPE local_17 self
		CALL local_16 local_17 out_int
		RETURN local_16
	}

	function EList_isNil {
		PARAM self
		LOCAL local_0
		ALLOC local_0 Bool
		MOV local_0 1
		RETURN local_0
	}

	function EList_head {
		PARAM self
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		LOCALSAVE
		ARG self
		ALLOC local_1 Int
		TYPE local_1 self
		CALL local_0 local_1 abort
		ALLOC local_2 Edge
		GATTR local_2 self car
		RETURN local_2
	}

	function EList_tail {
		PARAM self
		LOCAL local_0
		LOCAL local_1
		LOCALSAVE
		ARG self
		ALLOC local_1 Int
		TYPE local_1 self
		CALL local_0 local_1 abort
		RETURN self
	}

	function EList_cons {
		PARAM self
		PARAM e
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		LOCAL local_3
		LOCAL local_4
		ALLOC local_0 ECons
		ALLOC local_1 EList
		SATTR local_0 cdr local_1
		ALLOC local_2 Edge
		SATTR local_0 car local_2
		LOCALSAVE
		ARG local_0
		ARG e
		ARG self
		ALLOC local_4 Int
		TYPE local_4 local_0
		CALL local_3 local_4 init
		RETURN local_3
	}

	function EList_append {
		PARAM self
		PARAM l
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		LOCAL local_3
		LOCAL local_4
		LOCAL local_5
		LOCAL local_6
		LOCAL local_7
		LOCAL local_8
		LOCAL local_9
		LOCAL local_10
		LOCALSAVE
		ARG self
		ALLOC local_1 Int
		TYPE local_1 self
		CALL local_0 local_1 isNil
		IF local_0 GOTO label_1
		LOCALSAVE
		ARG self
		ALLOC local_3 Int
		TYPE local_3 self
		CALL local_2 local_3 tail
		LOCALSAVE
		ARG local_2
		ARG l
		ALLOC local_5 Int
		TYPE local_5 local_2
		CALL local_4 local_5 append
		LOCALSAVE
		ARG self
		ALLOC local_7 Int
		TYPE local_7 self
		CALL local_6 local_7 head
		LOCALSAVE
		ARG local_4
		ARG local_6
		ALLOC local_9 Int
		TYPE local_9 local_4
		CALL local_8 local_9 cons
		MOV local_10 local_8
		GOTO label_2
		LABEL label_1
		MOV local_10 l
		LABEL label_2
		RETURN local_10
	}

	function EList_print {
		PARAM self
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		ALLOC local_0 String
		LDATA local_0 data_5
		LOCALSAVE
		ARG self
		ARG local_0
		ALLOC local_2 Int
		TYPE local_2 self
		CALL local_1 local_2 out_string
		RETURN local_1
	}

	function ECons_isNil {
		PARAM self
		LOCAL local_0
		ALLOC local_0 Bool
		MOV local_0 0
		RETURN local_0
	}

	function ECons_head {
		PARAM self
		LOCAL local_0
		ALLOC local_0 Edge
		GATTR local_0 self car
		RETURN local_0
	}

	function ECons_tail {
		PARAM self
		LOCAL local_0
		ALLOC local_0 EList
		GATTR local_0 self cdr
		RETURN local_0
	}

	function ECons_init {
		PARAM self
		PARAM e
		PARAM rest
		SATTR self car e
		SATTR self cdr rest
		RETURN self
	}

	function ECons_print {
		PARAM self
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		LOCAL local_3
		LOCAL local_4
		LOCAL local_5
		ALLOC local_0 Edge
		GATTR local_0 self car
		LOCALSAVE
		ARG local_0
		ALLOC local_2 Int
		TYPE local_2 local_0
		CALL local_1 local_2 print
		ALLOC local_3 EList
		GATTR local_3 self cdr
		LOCALSAVE
		ARG local_3
		ALLOC local_5 Int
		TYPE local_5 local_3
		CALL local_4 local_5 print
		RETURN local_4
	}

	function VList_isNil {
		PARAM self
		LOCAL local_0
		ALLOC local_0 Bool
		MOV local_0 1
		RETURN local_0
	}

	function VList_head {
		PARAM self
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		LOCALSAVE
		ARG self
		ALLOC local_1 Int
		TYPE local_1 self
		CALL local_0 local_1 abort
		ALLOC local_2 Vertice
		GATTR local_2 self car
		RETURN local_2
	}

	function VList_tail {
		PARAM self
		LOCAL local_0
		LOCAL local_1
		LOCALSAVE
		ARG self
		ALLOC local_1 Int
		TYPE local_1 self
		CALL local_0 local_1 abort
		RETURN self
	}

	function VList_cons {
		PARAM self
		PARAM v
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		LOCAL local_3
		LOCAL local_4
		ALLOC local_0 VCons
		ALLOC local_1 VList
		SATTR local_0 cdr local_1
		ALLOC local_2 Vertice
		SATTR local_0 car local_2
		LOCALSAVE
		ARG local_0
		ARG v
		ARG self
		ALLOC local_4 Int
		TYPE local_4 local_0
		CALL local_3 local_4 init
		RETURN local_3
	}

	function VList_print {
		PARAM self
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		ALLOC local_0 String
		LDATA local_0 data_5
		LOCALSAVE
		ARG self
		ARG local_0
		ALLOC local_2 Int
		TYPE local_2 self
		CALL local_1 local_2 out_string
		RETURN local_1
	}

	function VCons_isNil {
		PARAM self
		LOCAL local_0
		ALLOC local_0 Bool
		MOV local_0 0
		RETURN local_0
	}

	function VCons_head {
		PARAM self
		LOCAL local_0
		ALLOC local_0 Vertice
		GATTR local_0 self car
		RETURN local_0
	}

	function VCons_tail {
		PARAM self
		LOCAL local_0
		ALLOC local_0 VList
		GATTR local_0 self cdr
		RETURN local_0
	}

	function VCons_init {
		PARAM self
		PARAM v
		PARAM rest
		SATTR self car v
		SATTR self cdr rest
		RETURN self
	}

	function VCons_print {
		PARAM self
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		LOCAL local_3
		LOCAL local_4
		LOCAL local_5
		ALLOC local_0 Vertice
		GATTR local_0 self car
		LOCALSAVE
		ARG local_0
		ALLOC local_2 Int
		TYPE local_2 local_0
		CALL local_1 local_2 print
		ALLOC local_3 VList
		GATTR local_3 self cdr
		LOCALSAVE
		ARG local_3
		ALLOC local_5 Int
		TYPE local_5 local_3
		CALL local_4 local_5 print
		RETURN local_4
	}

	function Parse_read_input {
		PARAM self
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		LOCAL local_3
		LOCAL local_4
		LOCAL local_5
		LOCAL local_6
		LOCAL local_7
		LOCAL local_8
		LOCAL local_9
		LOCAL local_10
		LOCAL local_11
		LOCAL local_12
		LOCAL local_13
		LOCAL local_14
		LOCAL local_15
		LOCAL local_16
		LOCAL local_17
		LOCAL local_18
		LOCAL local_19
		LOCAL local_20
		LOCAL local_21
		LOCAL local_22
		LOCAL local_23
		LOCAL local_24
		ALLOC local_0 Graph
		ALLOC local_1 VList
		ALLOC local_2 Vertice
		SATTR local_1 car local_2
		SATTR local_0 vertices local_1
		ALLOC local_3 EList
		ALLOC local_4 Edge
		SATTR local_3 car local_4
		SATTR local_0 edges local_3
		ALLOC local_5 Graph
		MOV local_5 local_0
		LOCALSAVE
		ARG self
		ALLOC local_7 Int
		TYPE local_7 self
		CALL local_6 local_7 in_string
		ALLOC local_8 String
		MOV local_8 local_6
		ALLOC local_24 void
		LABEL label_3
		ALLOC local_9 BoolOp
		GATTR local_9 self boolop
		ALLOC local_12 Bool
		ALLOC local_11 Bool
		ALLOC local_10 String
		LDATA local_10 data_5
		E local_11 local_8 local_10
		NOT local_12 local_11
		ALLOC local_15 Bool
		ALLOC local_14 Bool
		ALLOC local_13 String
		LDATA local_13 data_22
		E local_14 local_8 local_13
		NOT local_15 local_14
		LOCALSAVE
		ARG local_9
		ARG local_12
		ARG local_15
		ALLOC local_17 Int
		TYPE local_17 local_9
		CALL local_16 local_17 and
		IF local_16 GOTO label_4
		GOTO label_5
		LABEL label_4
		LOCALSAVE
		ARG self
		ARG local_8
		ALLOC local_19 Int
		TYPE local_19 self
		CALL local_18 local_19 parse_line
		LOCALSAVE
		ARG local_5
		ARG local_18
		ALLOC local_21 Int
		TYPE local_21 local_5
		CALL local_20 local_21 add_vertice
		LOCALSAVE
		ARG self
		ALLOC local_23 Int
		TYPE local_23 self
		CALL local_22 local_23 in_string
		MOV local_8 local_22
		GOTO label_3
		LABEL label_5
		RETURN local_5
	}

	function Parse_parse_line {
		PARAM self
		PARAM s
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		LOCAL local_3
		LOCAL local_4
		LOCAL local_5
		LOCAL local_6
		LOCAL local_7
		LOCAL local_8
		LOCAL local_9
		LOCAL local_10
		LOCAL local_11
		LOCAL local_12
		LOCAL local_13
		LOCAL local_14
		LOCAL local_15
		LOCAL local_16
		LOCAL local_17
		LOCAL local_18
		LOCAL local_19
		LOCAL local_20
		LOCAL local_21
		LOCAL local_22
		LOCAL local_23
		LOCAL local_24
		LOCAL local_25
		LOCAL local_26
		LOCAL local_27
		LOCAL local_28
		LOCAL local_29
		LOCAL local_30
		LOCAL local_31
		LOCAL local_32
		LOCAL local_33
		ALLOC local_0 Vertice
		ALLOC local_1 Int
		SATTR local_0 num local_1
		ALLOC local_2 EList
		ALLOC local_3 Edge
		SATTR local_2 car local_3
		SATTR local_0 out local_2
		LOCALSAVE
		ARG self
		ARG s
		ALLOC local_5 Int
		TYPE local_5 self
		CALL local_4 local_5 a2i
		LOCALSAVE
		ARG local_0
		ARG local_4
		ALLOC local_7 Int
		TYPE local_7 local_0
		CALL local_6 local_7 init
		ALLOC local_8 Vertice
		MOV local_8 local_6
		ALLOC local_33 void
		LABEL label_6
		ALLOC local_14 Bool
		ALLOC local_13 Bool
		ALLOC local_9 String
		GATTR local_9 self rest
		LOCALSAVE
		ARG local_9
		ALLOC local_11 Int
		TYPE local_11 local_9
		CALL local_10 local_11 length
		ALLOC local_12 Int
		MOV local_12 0
		E local_13 local_10 local_12
		NOT local_14 local_13
		IF local_14 GOTO label_7
		GOTO label_8
		LABEL label_7
		ALLOC local_15 String
		GATTR local_15 self rest
		LOCALSAVE
		ARG self
		ARG local_15
		ALLOC local_17 Int
		TYPE local_17 self
		CALL local_16 local_17 a2i
		ALLOC local_18 Int
		MOV local_18 local_16
		ALLOC local_19 String
		GATTR local_19 self rest
		LOCALSAVE
		ARG self
		ARG local_19
		ALLOC local_21 Int
		TYPE local_21 self
		CALL local_20 local_21 a2i
		ALLOC local_22 Int
		MOV local_22 local_20
		ALLOC local_23 Edge
		ALLOC local_24 Int
		SATTR local_23 from local_24
		ALLOC local_25 Int
		SATTR local_23 to local_25
		ALLOC local_26 Int
		SATTR local_23 weight local_26
		LOCALSAVE
		ARG local_8
		ALLOC local_28 Int
		TYPE local_28 local_8
		CALL local_27 local_28 number
		LOCALSAVE
		ARG local_23
		ARG local_27
		ARG local_18
		ARG local_22
		ALLOC local_30 Int
		TYPE local_30 local_23
		CALL local_29 local_30 init
		LOCALSAVE
		ARG local_8
		ARG local_29
		ALLOC local_32 Int
		TYPE local_32 local_8
		CALL local_31 local_32 add_out
		GOTO label_6
		LABEL label_8
		RETURN local_8
	}

	function Parse_c2i {
		PARAM self
		PARAM char
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		LOCAL local_3
		LOCAL local_4
		LOCAL local_5
		LOCAL local_6
		LOCAL local_7
		LOCAL local_8
		LOCAL local_9
		LOCAL local_10
		LOCAL local_11
		LOCAL local_12
		LOCAL local_13
		LOCAL local_14
		LOCAL local_15
		LOCAL local_16
		LOCAL local_17
		LOCAL local_18
		LOCAL local_19
		LOCAL local_20
		LOCAL local_21
		LOCAL local_22
		LOCAL local_23
		LOCAL local_24
		LOCAL local_25
		LOCAL local_26
		LOCAL local_27
		LOCAL local_28
		LOCAL local_29
		LOCAL local_30
		LOCAL local_31
		LOCAL local_32
		LOCAL local_33
		LOCAL local_34
		LOCAL local_35
		LOCAL local_36
		LOCAL local_37
		LOCAL local_38
		LOCAL local_39
		LOCAL local_40
		LOCAL local_41
		LOCAL local_42
		ALLOC local_1 Bool
		ALLOC local_0 String
		LDATA local_0 data_7
		E local_1 char local_0
		IF local_1 GOTO label_27
		ALLOC local_4 Bool
		ALLOC local_3 String
		LDATA local_3 data_8
		E local_4 char local_3
		IF local_4 GOTO label_25
		ALLOC local_7 Bool
		ALLOC local_6 String
		LDATA local_6 data_9
		E local_7 char local_6
		IF local_7 GOTO label_23
		ALLOC local_10 Bool
		ALLOC local_9 String
		LDATA local_9 data_10
		E local_10 char local_9
		IF local_10 GOTO label_21
		ALLOC local_13 Bool
		ALLOC local_12 String
		LDATA local_12 data_11
		E local_13 char local_12
		IF local_13 GOTO label_19
		ALLOC local_16 Bool
		ALLOC local_15 String
		LDATA local_15 data_12
		E local_16 char local_15
		IF local_16 GOTO label_17
		ALLOC local_19 Bool
		ALLOC local_18 String
		LDATA local_18 data_13
		E local_19 char local_18
		IF local_19 GOTO label_15
		ALLOC local_22 Bool
		ALLOC local_21 String
		LDATA local_21 data_14
		E local_22 char local_21
		IF local_22 GOTO label_13
		ALLOC local_25 Bool
		ALLOC local_24 String
		LDATA local_24 data_15
		E local_25 char local_24
		IF local_25 GOTO label_11
		ALLOC local_28 Bool
		ALLOC local_27 String
		LDATA local_27 data_16
		E local_28 char local_27
		IF local_28 GOTO label_9
		LOCALSAVE
		ARG self
		ALLOC local_31 Int
		TYPE local_31 self
		CALL local_30 local_31 abort
		ALLOC local_32 Int
		MOV local_32 0
		MOV local_33 local_32
		GOTO label_10
		LABEL label_9
		ALLOC local_29 Int
		MOV local_29 9
		MOV local_33 local_29
		LABEL label_10
		MOV local_34 local_33
		GOTO label_12
		LABEL label_11
		ALLOC local_26 Int
		MOV local_26 8
		MOV local_34 local_26
		LABEL label_12
		MOV local_35 local_34
		GOTO label_14
		LABEL label_13
		ALLOC local_23 Int
		MOV local_23 7
		MOV local_35 local_23
		LABEL label_14
		MOV local_36 local_35
		GOTO label_16
		LABEL label_15
		ALLOC local_20 Int
		MOV local_20 6
		MOV local_36 local_20
		LABEL label_16
		MOV local_37 local_36
		GOTO label_18
		LABEL label_17
		ALLOC local_17 Int
		MOV local_17 5
		MOV local_37 local_17
		LABEL label_18
		MOV local_38 local_37
		GOTO label_20
		LABEL label_19
		ALLOC local_14 Int
		MOV local_14 4
		MOV local_38 local_14
		LABEL label_20
		MOV local_39 local_38
		GOTO label_22
		LABEL label_21
		ALLOC local_11 Int
		MOV local_11 3
		MOV local_39 local_11
		LABEL label_22
		MOV local_40 local_39
		GOTO label_24
		LABEL label_23
		ALLOC local_8 Int
		MOV local_8 2
		MOV local_40 local_8
		LABEL label_24
		MOV local_41 local_40
		GOTO label_26
		LABEL label_25
		ALLOC local_5 Int
		MOV local_5 1
		MOV local_41 local_5
		LABEL label_26
		MOV local_42 local_41
		GOTO label_28
		LABEL label_27
		ALLOC local_2 Int
		MOV local_2 0
		MOV local_42 local_2
		LABEL label_28
		RETURN local_42
	}

	function Parse_a2i {
		PARAM self
		PARAM s
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		LOCAL local_3
		LOCAL local_4
		LOCAL local_5
		LOCAL local_6
		LOCAL local_7
		LOCAL local_8
		LOCAL local_9
		LOCAL local_10
		LOCAL local_11
		LOCAL local_12
		LOCAL local_13
		LOCAL local_14
		LOCAL local_15
		LOCAL local_16
		LOCAL local_17
		LOCAL local_18
		LOCAL local_19
		LOCAL local_20
		LOCAL local_21
		LOCAL local_22
		LOCAL local_23
		LOCAL local_24
		LOCAL local_25
		LOCAL local_26
		LOCAL local_27
		LOCAL local_28
		LOCAL local_29
		LOCAL local_30
		LOCAL local_31
		LOCAL local_32
		LOCAL local_33
		LOCAL local_34
		LOCAL local_35
		LOCAL local_36
		LOCAL local_37
		LOCAL local_38
		LOCAL local_39
		LOCAL local_40
		ALLOC local_3 Bool
		LOCALSAVE
		ARG s
		ALLOC local_1 Int
		TYPE local_1 s
		CALL local_0 local_1 length
		ALLOC local_2 Int
		MOV local_2 0
		E local_3 local_0 local_2
		IF local_3 GOTO label_33
		ALLOC local_10 Bool
		ALLOC local_5 Int
		MOV local_5 0
		ALLOC local_6 Int
		MOV local_6 1
		LOCALSAVE
		ARG s
		ARG local_5
		ARG local_6
		ALLOC local_8 Int
		TYPE local_8 s
		CALL local_7 local_8 substr
		ALLOC local_9 String
		LDATA local_9 data_17
		E local_10 local_7 local_9
		IF local_10 GOTO label_31
		ALLOC local_26 Bool
		ALLOC local_21 Int
		MOV local_21 0
		ALLOC local_22 Int
		MOV local_22 1
		LOCALSAVE
		ARG s
		ARG local_21
		ARG local_22
		ALLOC local_24 Int
		TYPE local_24 s
		CALL local_23 local_24 substr
		ALLOC local_25 String
		LDATA local_25 data_19
		E local_26 local_23 local_25
		IF local_26 GOTO label_29
		LOCALSAVE
		ARG self
		ARG s
		ALLOC local_37 Int
		TYPE local_37 self
		CALL local_36 local_37 a2i_aux
		MOV local_38 local_36
		GOTO label_30
		LABEL label_29
		ALLOC local_27 Int
		MOV local_27 1
		LOCALSAVE
		ARG s
		ALLOC local_29 Int
		TYPE local_29 s
		CALL local_28 local_29 length
		ALLOC local_30 Int
		MOV local_30 1
		ALLOC local_31 Int
		SUB local_31 local_28 local_30
		LOCALSAVE
		ARG s
		ARG local_27
		ARG local_31
		ALLOC local_33 Int
		TYPE local_33 s
		CALL local_32 local_33 substr
		LOCALSAVE
		ARG self
		ARG local_32
		ALLOC local_35 Int
		TYPE local_35 self
		CALL local_34 local_35 a2i
		MOV local_38 local_34
		LABEL label_30
		MOV local_39 local_38
		GOTO label_32
		LABEL label_31
		ALLOC local_20 Int
		ALLOC local_11 Int
		MOV local_11 1
		LOCALSAVE
		ARG s
		ALLOC local_13 Int
		TYPE local_13 s
		CALL local_12 local_13 length
		ALLOC local_14 Int
		MOV local_14 1
		ALLOC local_15 Int
		SUB local_15 local_12 local_14
		LOCALSAVE
		ARG s
		ARG local_11
		ARG local_15
		ALLOC local_17 Int
		TYPE local_17 s
		CALL local_16 local_17 substr
		LOCALSAVE
		ARG self
		ARG local_16
		ALLOC local_19 Int
		TYPE local_19 self
		CALL local_18 local_19 a2i_aux
		CMP local_20 local_18
		MOV local_39 local_20
		LABEL label_32
		MOV local_40 local_39
		GOTO label_34
		LABEL label_33
		ALLOC local_4 Int
		MOV local_4 0
		MOV local_40 local_4
		LABEL label_34
		RETURN local_40
	}

	function Parse_a2i_aux {
		PARAM self
		PARAM s
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		LOCAL local_3
		LOCAL local_4
		LOCAL local_5
		LOCAL local_6
		LOCAL local_7
		LOCAL local_8
		LOCAL local_9
		LOCAL local_10
		LOCAL local_11
		LOCAL local_12
		LOCAL local_13
		LOCAL local_14
		LOCAL local_15
		LOCAL local_16
		LOCAL local_17
		LOCAL local_18
		LOCAL local_19
		LOCAL local_20
		LOCAL local_21
		LOCAL local_22
		LOCAL local_23
		LOCAL local_24
		LOCAL local_25
		LOCAL local_26
		LOCAL local_27
		LOCAL local_28
		LOCAL local_29
		LOCAL local_30
		LOCAL local_31
		LOCAL local_32
		LOCAL local_33
		LOCAL local_34
		LOCAL local_35
		LOCAL local_36
		LOCAL local_37
		LOCAL local_38
		LOCAL local_39
		LOCAL local_40
		LOCAL local_41
		LOCAL local_42
		LOCAL local_43
		LOCAL local_44
		LOCAL local_45
		LOCAL local_46
		LOCAL local_47
		LOCAL local_48
		LOCAL local_49
		ALLOC local_0 Int
		MOV local_0 0
		ALLOC local_1 Int
		MOV local_1 local_0
		LOCALSAVE
		ARG s
		ALLOC local_3 Int
		TYPE local_3 s
		CALL local_2 local_3 length
		ALLOC local_4 Int
		MOV local_4 local_2
		ALLOC local_5 Int
		MOV local_5 0
		ALLOC local_6 Int
		MOV local_6 local_5
		ALLOC local_49 void
		LABEL label_41
		ALLOC local_7 Bool
		L local_7 local_6 local_4
		IF local_7 GOTO label_42
		GOTO label_43
		LABEL label_42
		ALLOC local_8 Int
		MOV local_8 1
		LOCALSAVE
		ARG s
		ARG local_6
		ARG local_8
		ALLOC local_10 Int
		TYPE local_10 s
		CALL local_9 local_10 substr
		ALLOC local_11 String
		MOV local_11 local_9
		ALLOC local_13 Bool
		ALLOC local_12 String
		LDATA local_12 data_19
		E local_13 local_11 local_12
		IF local_13 GOTO label_39
		ALLOC local_24 Bool
		ALLOC local_23 String
		LDATA local_23 data_20
		E local_24 local_11 local_23
		IF local_24 GOTO label_37
		ALLOC local_34 Int
		MOV local_34 10
		ALLOC local_35 Int
		Mul local_35 local_1 local_34
		ALLOC local_36 Int
		MOV local_36 1
		LOCALSAVE
		ARG s
		ARG local_6
		ARG local_36
		ALLOC local_38 Int
		TYPE local_38 s
		CALL local_37 local_38 substr
		LOCALSAVE
		ARG self
		ARG local_37
		ALLOC local_40 Int
		TYPE local_40 self
		CALL local_39 local_40 c2i
		ALLOC local_41 Int
		ADD local_41 local_35 local_39
		MOV local_1 local_41
		ALLOC local_42 Int
		MOV local_42 1
		ALLOC local_43 Int
		ADD local_43 local_6 local_42
		MOV local_6 local_43
		ALLOC local_44 Bool
		E local_44 local_6 local_4
		IF local_44 GOTO label_35
		MOV local_46 local_45
		GOTO label_36
		LABEL label_35
		ALLOC local_45 String
		LDATA local_45 data_22
		SATTR self rest local_45
		MOV local_46 local_45
		LABEL label_36
		MOV local_47 local_46
		GOTO label_38
		LABEL label_37
		ALLOC local_25 Int
		MOV local_25 1
		ALLOC local_26 Int
		ADD local_26 local_6 local_25
		LOCALSAVE
		ARG s
		ALLOC local_28 Int
		TYPE local_28 s
		CALL local_27 local_28 length
		ALLOC local_29 Int
		SUB local_29 local_27 local_6
		ALLOC local_30 Int
		MOV local_30 1
		ALLOC local_31 Int
		SUB local_31 local_29 local_30
		LOCALSAVE
		ARG s
		ARG local_26
		ARG local_31
		ALLOC local_33 Int
		TYPE local_33 s
		CALL local_32 local_33 substr
		SATTR self rest local_32
		MOV local_6 local_4
		MOV local_47 local_6
		LABEL label_38
		MOV local_48 local_47
		GOTO label_40
		LABEL label_39
		ALLOC local_14 Int
		MOV local_14 1
		ALLOC local_15 Int
		ADD local_15 local_6 local_14
		LOCALSAVE
		ARG s
		ALLOC local_17 Int
		TYPE local_17 s
		CALL local_16 local_17 length
		ALLOC local_18 Int
		SUB local_18 local_16 local_6
		ALLOC local_19 Int
		MOV local_19 1
		ALLOC local_20 Int
		SUB local_20 local_18 local_19
		LOCALSAVE
		ARG s
		ARG local_15
		ARG local_20
		ALLOC local_22 Int
		TYPE local_22 s
		CALL local_21 local_22 substr
		SATTR self rest local_21
		MOV local_6 local_4
		MOV local_48 local_6
		LABEL label_40
		GOTO label_41
		LABEL label_43
		RETURN local_1
	}

	function Main_main {
		PARAM self
		LOCAL local_0
		LOCAL local_1
		LOCAL local_2
		LOCAL local_3
		LOCAL local_4
		LOCAL local_5
		ALLOC local_0 Graph
		GATTR local_0 self g
		LOCALSAVE
		ARG local_0
		ALLOC local_2 Int
		TYPE local_2 local_0
		CALL local_1 local_2 print_V
		ALLOC local_3 Graph
		GATTR local_3 self g
		LOCALSAVE
		ARG local_3
		ALLOC local_5 Int
		TYPE local_5 local_3
		CALL local_4 local_5 print_E
		RETURN local_4
	}

	function BoolOp_and {
		PARAM self
		PARAM b1
		PARAM b2
		LOCAL local_0
		LOCAL local_1
		IF b1 GOTO label_44
		ALLOC local_0 Bool
		MOV local_0 0
		MOV local_1 local_0
		GOTO label_45
		LABEL label_44
		MOV local_1 b2
		LABEL label_45
		RETURN local_1
	}

	function BoolOp_or {
		PARAM self
		PARAM b1
		PARAM b2
		LOCAL local_0
		LOCAL local_1
		IF b1 GOTO label_46
		MOV local_1 b2
		GOTO label_47
		LABEL label_46
		ALLOC local_0 Bool
		MOV local_0 1
		MOV local_1 local_0
		LABEL label_47
		RETURN local_1
	}

	function main {
		LOCAL local_0
		LOCAL local_1
		LOCAL local_0
		LOCAL local_3
		LOCAL local_4
		LOCAL local_5
		LOCAL local_6
		ALLOC local_0 Main
		LOCALSAVE
		ARG local_0
		ALLOC local_5 Int
		TYPE local_5 local_0
		CALL local_4 local_5 read_input
		SATTR local_0 g local_4
		LOCALSAVE
		ARG local_0
		ALLOC local_6 Int
		TYPE local_6 local_0
		CALL local_1 local_6 main
	}

END <--